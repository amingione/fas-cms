---
import BaseLayout from '../../layouts/BaseLayout.astro';
import AppointmentCard from '../../components/appointmentCard.astro';
import { useEffect } from 'preact/hooks';
import { useState } from 'preact/hooks';

/**
 * Define the structure of an appointment object.
 */
type Appointment = {
  id?: string;
  _id?: string;
  [key: string]: any; // Allow additional properties
};

const [appointments, setAppointments] = useState<Appointment[]>([]);
const [loading, setLoading] = useState(true);

useEffect(() => {
  const fetchAppointments = async () => {
    try {
      const res = await fetch('/api/userData');
      if (res.ok) {
        const data = await res.json();
        setAppointments(data?.appointments || []);
      }
    } catch (err) {
      console.error('Failed to fetch appointments:', err);
    } finally {
      setLoading(false);
    }
  };

  fetchAppointments();
}, []);
---

<BaseLayout>
  <section class="text-white p-8 font-mono">
    <h1 class="text-4xl font-cyber mb-6 text-center">My Appointments</h1>

    <div class="max-w-4xl mx-auto">
      {loading ? (
        <p class="text-center">Loading appointments...</p>
      ) : appointments.length > 0 ? (
        <div class="space-y-6">
          {appointments.map(appointment => (
            typeof appointment === 'object' && appointment !== null && !Array.isArray(appointment) ? (
              <AppointmentCard key={appointment.id || appointment._id} {...appointment} />
            ) : null
          ))}
        </div>
      ) : (
        <div class="text-center space-y-4">
          <p class="text-white/70">You have no upcoming or past appointments.</p>
          <a href="/schedule" class="inline-block bg-white text-accent font-bold py-2 px-4 rounded hover:bg-gray-300 transition">
            Book Your First Install
          </a>
        </div>
      )}
    </div>
  </section>
</BaseLayout>
