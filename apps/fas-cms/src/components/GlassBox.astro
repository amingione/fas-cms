---
interface Props {
  title?: string;
  description?: string;
  /** One of 'sm' | 'md' | 'lg' or any custom Tailwind size classes */
  size?: 'sm' | 'md' | 'lg' | string;
  /** Optional wrapper classes to customize the outer container */
  class?: string;
  /** Show the colorful gradient background behind the glass */
  showBackground?: boolean;
}

const {
  title,
  description,
  size = 'md',
  class: className = '',
  showBackground = true
} = Astro.props as Props;

const sizeMap: Record<string, string> = {
  sm: 'w-56 h-56',
  md: 'w-72 h-72',
  lg: 'w-96 h-96'
};

const boxSize = typeof size === 'string' && sizeMap[size] ? sizeMap[size] : (size as string);
---

<div class={`relative w-full min-h-[60vh] p-10 bg-gray-900 overflow-hidden ${className}`}>
  {showBackground && (
    <div class="absolute inset-0 z-0 bg-gradient-to-br from-purple-800 via-pink-600 to-indigo-800"></div>
  )}

  <div class="perspective-container relative w-full h-full flex items-center justify-center">
    <div class={`relative ${boxSize || 'w-72 h-72'}`}>
      <div class="glass-layer back-layer"></div>
      <div class="glass-layer front-layer">
        <div class="relative z-10 p-6">
          {title && <h2 class="text-white text-2xl font-bold">{title}</h2>}
          {description && <p class="text-gray-200 mt-2">{description}</p>}
          <slot />
        </div>
      </div>
    </div>
  </div>
</div>

