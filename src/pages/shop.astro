---
import BaseLayout from '../layouts/BaseLayout.astro';
import ProductCard from '../components/ProductCard.astro';
import FloatingWidget from '../components/floatingwidget.astro';
import SideCartWidget from '../components/sidecartwidget.astro';

interface Product {
  id: number;
  name: string;
  price_html: string;
  images: { src: string }[];
}

const loadProducts = async () => {
  const response = await fetch('https://fasmotorsports.com/wp-json/wc/v3/products?per_page=12', {
    headers: {
      Authorization: `Basic ${Buffer.from(import.meta.env.WOO_API_KEY + ':' + import.meta.env.WOO_API_SECRET).toString('base64')}`,
    },
  });

  return await response.json();
};

const products = await loadProducts();
---
<BaseLayout>
  <section class="p-10 space-y-10 bg-transparent text-white max-w-7xl mx-auto">
    <h1 class="font-ethno text-3xl font-bold text-accent">Shop</h1>
    <div class="bg-transparent p-6 rounded-[10px] shadow-md flex gap-6 flex-wrap">
      <div class="flex-1 min-w-[200px]">
        <label for="categoryFilter" class="font-borg block mb-2 font-semibold text-primary">Filter by Vehicle</label>
        <select id="categoryFilter" class="w-full bg-black text-white border border-gray-600 rounded px-4 py-2">
          <option value="">All Models</option>
          <option value="Charger">Charger</option>
          <option value="Challenger">Challenger</option>
          <option value="TRX">TRX</option>
          <option value="Trackhawk">Trackhawk</option>
          <option value="Demon">Demon</option>
          <option value="Redeye">Redeye</option>
          <option value="Durango">Durango</option>
          <option value="Mustang">Mustang</option>
          <option value="Raptor">Raptor</option>
          <option value="Shelby Truck">Shelby Truck</option>
          <option value="F150">F150</option>
          <option value="F250">F250</option>
          <option value="F350">F350</option>
          <option value="F450">F450</option>
        </select>
      </div>
      <div class="flex-1 min-w-[200px]">
        <label for="tuneFilter" class="font-borg block mb-2 font-semibold text-primary">Tune Required?</label>
        <select id="tuneFilter" class="w-full bg-black text-white border border-gray-600 rounded px-4 py-2">
          <option value="">All Builds</option>
          <option value="yes">Tune Required</option>
          <option value="no">No Tune Needed</option>
        </select>
      </div>
    </div>
    <div class="bg-transparent p-6 rounded-[10px] shadow-md">
        <label for="hpRange" class="font-borg block mb-2 font-semibold text-primary">Filter by Horsepower (600â€“1500+hp)</label>
        <input
          id="hpRange"
          type="range"
          min="600"
          max="1500"
          step="50"
          value="1500"
          class="w-1/2 align-left h-2 rounded-lg appearance-none cursor-pointer accent-primary transition-all duration-300"
          style="background: linear-gradient(to right, #dc2626 100%, #4b5563 0%)"
        />
        <p class="mt-2 text-sm font-cyber-italic text-gray-300">Showing up to: <span id="hpValue" class="font-bold text-white text-2xl">1500hp+</span></p>
      </div>
  
    
    <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-8">
      {products.map(product => (
        <ProductCard product={product} />
      ))}
    </div>
  </section>
  <FloatingWidget />
  <SideCartWidget />
  <style>
    input[type="range"]::-webkit-slider-thumb {
      -webkit-appearance: none;
      height: 24px;
      width: 24px;
      background: white;
      clip-path: polygon(0% 0%, 100% 50%, 0% 100%);
      border: none;
      margin-top: -2px;
      cursor: pointer;
    }

    input[type="range"]::-moz-range-thumb {
      height: 24px;
      width: 24px;
      background: white;
      clip-path: polygon(0% 0%, 100% 50%, 0% 100%);
      border: none;
      cursor: pointer;
      margin-top: -6px;
    }

    input[type="range"]::-ms-thumb {
      height: 24px;
      width: 24px;
      background: white;
      clip-path: polygon(0% 0%, 100% 50%, 0% 100%);
      border: none;
      cursor: pointer;
      margin-top: -6px;
    }
  </style>
  <script>
    const slider = document.getElementById('hpRange');
    const output = document.getElementById('hpValue');

    function updateSliderBackground(sliderEl) {
      const val = (sliderEl.value - sliderEl.min) / (sliderEl.max - sliderEl.min) * 100;
      sliderEl.style.background = `linear-gradient(to right, #dc2626 ${val}%, #4b5563 ${val}%)`;
      output.textContent = sliderEl.value + 'hp+';
    }

    document.addEventListener('DOMContentLoaded', () => {
      updateSliderBackground(slider);
      slider.addEventListener('input', () => updateSliderBackground(slider));
    });
  </script>
</BaseLayout>