---
import BaseLayout from '../layouts/BaseLayout.astro';
import { getGitPageDoc, sbFieldPath, sbObjectId } from '@lib/stackbit';
import SectionRenderer from '@/components/SectionRenderer.astro';
const pageDoc: any = await getGitPageDoc('schedule');
import BookingForm from '../components/BookingForm';
import AppointmentCard from '../components/appointmentCard.astro';

const response = await fetch('https://api.cal.com/v1/bookings', {
  headers: {
    Authorization: `Bearer ${import.meta.env.PUBLIC_CALCOM_API_KEY}`,
  },
});

const data = await response.json();
const slots = data?.bookings || [];
---

<BaseLayout>
  <div {...sbObjectId('content/pages/schedule.json')}>
  <div aria-hidden="true" class="hidden" {...sbFieldPath('title')}>{pageDoc?.title ?? 'Schedule'}</div>
  {Array.isArray(pageDoc?.sections) && pageDoc.sections.length > 0 && (
    <SectionRenderer sections={pageDoc.sections} baseFieldPath="sections" />
  )}
  <section class="px-6 py-24 max-w-6xl mx-auto text-center">
    <h1 class="text-4xl font-cyber text-accent mb-4" {...sbFieldPath('title')}>
      {pageDoc?.title ?? 'Schedule Your Install'}
    </h1>
    <p class="text-lg font-bold font-mono tracking-[1.2px] text-primary mb-12">
      Select a time that works for you — we’ll handle the rest.
    </p>

    <div class="max-w-4xl mx-auto mt-12 text-left">
         <iframe
        src="https://cal.com/fasmotorsports"
        width="100%"
        height="1000vh"
        frameborder="0"
        scrolling="yes"
        class="border border-white rounded-lg"
        title="FAS Motorsports Appointments"
      ></iframe>
        
    <div class="my-16 text-accent font-bold text-center">
      <h2 class="text-2xl color primary font-bold mb-4 font-sans">Need an appointment for something else?</h2>
      </div>
    <div class="max-w-2xl mx-auto">
      <BookingForm />
    </div>
      {
        slots.length > 0 ? (
          slots.map((slot: {
            title?: string;
            startTime: string;
            status?: string;
            attendees?: { name?: string }[];
            rescheduleUrl?: string;
            cancelUrl?: string;
          }) => (
            <AppointmentCard
              title={slot.title || 'Service Appointment'}
              date={slot.startTime}
              status={slot.status || 'confirmed'}
              customer={slot.attendees?.[0]?.name || 'Unknown'}
              rescheduleUrl={slot.rescheduleUrl}
              cancelUrl={slot.cancelUrl}
            />

          ))
        ) : (
          <p class="text-gray-400"></p>
        )
      }
    </div>
  </section>
  </div>
</BaseLayout>
