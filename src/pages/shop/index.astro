---
import BaseLayout from '../../layouts/BaseLayout.astro';

export const prerender = false;

console.log("üîç SANITY_PROJECT_ID (inline script):", import.meta.env.PUBLIC_SANITY_PROJECT_ID);
---

<BaseLayout>
  <section class="max-w-7xl mx-auto px-6 py-12 text-white space-y-10">
    <h1 class="text-3xl font-ethno font-bold text-accent">Shop</h1>

    <!-- Category Tabs -->
    <div id="category-tabs" class="flex flex-wrap gap-3 text-sm font-captain">
      <!-- JS will populate tabs here -->
    </div>

    <!-- Sort -->
    <div class="flex items-center gap-4 text-sm font-captain">
      <label for="sort" class="text-primary">Sort:</label>
      <select id="sort" class="bg-black border border-gray-700 px-3 py-1 rounded">
        <option value="price">Price</option>
        <option value="horsepower">Horsepower</option>
      </select>
    </div>

    <!-- Product Grid -->
    <div id="product-grid" class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-8 pt-6">
      <!-- JS populates this -->
    </div>

    <!-- Pagination -->
    <div id="pagination" class="flex justify-center mt-12">
      <!-- JS populates this -->
    </div>
  </section>

  <script type="module" is:inline>
    // Now using /api/products server route to fetch data securely
    const grid = document.getElementById('product-grid');
    const pagination = document.getElementById('pagination');
    const categoryTabs = document.getElementById("category-tabs");
    const sortSelect = document.getElementById('sort');

    const PAGE_SIZE = 9;
    let currentPage = 1;
    let currentCategory = '';
    let currentSort = 'price';

    const fetchProducts = async () => {
      const start = (currentPage - 1) * PAGE_SIZE;
      const end = start + PAGE_SIZE;
      const res = await fetch(`/api/products?start=${start}&end=${end}&category=${currentCategory}&sort=${currentSort}`);
      const data = await res.json();
      return data || [];
    };

    const fetchCategories = async () => {
      const query = `*[_type == "category"]{ title }`;
      const result = await fetch(
        `https://${import.meta.env.PUBLIC_SANITY_PROJECT_ID}.api.sanity.io/v1/data/query/production?query=${encodeURIComponent(query)}`,
        {
          headers: {
            Authorization: "Bearer " + import.meta.env.PUBLIC_SANITY_API_TOKEN,
          },
        }
      ).then(res => res.json());
      return result.result || [];
    };

    const renderCategoryTabs = async () => {
      const categories = await fetchCategories();
      categoryTabs.innerHTML = `<button class="tab active" data-category="">All</button>`;
      categories.forEach(cat => {
        const btn = document.createElement("button");
        btn.className = "tab";
        btn.setAttribute("data-category", cat.title);
        btn.innerText = cat.title;
        categoryTabs.appendChild(btn);
      });
    };

    const renderProducts = async () => {
      const products = await fetchProducts();
      grid.innerHTML = products.map(product => {
        const title = product.title ?? 'Untitled';
        const slug = product.slug?.current ?? '#';
        const image = product.images?.[0]?.asset?.url ?? '/images/placeholder-product.png';
        const price = typeof product.price === 'number'
          ? `$${parseFloat(product.price).toFixed(2)}`
          : '‚Äî';

        return `
          <div class="bg-white/5 border border-white/10 rounded-lg overflow-hidden shadow-lg backdrop-blur-md hover:scale-[1.02] transition-all">
            <a href="/shop/${slug}">
              <img src="${image}" alt="${title}" class="w-full h-60 object-cover" />
              <div class="p-4 space-y-2">
                <h3 class="font-semibold text-lg">${title}</h3>
                <p class="text-primary font-bold">${price}</p>
              </div>
            </a>
          </div>
        `;
      }).join('');
    };

    renderCategoryTabs();
    renderProducts();
  </script>
</BaseLayout>