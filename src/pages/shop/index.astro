---
import BaseLayout from '../../layouts/BaseLayout.astro';
import ProductCard from '../../components/ProductCard.astro';
import { fetchProductsFromSanity } from '../../lib/sanity-utils';
import ProductPageFilters from '../../components/ProductPageFilters.astro';

export const prerender = false;

const PAGE_SIZE = 12;
const url = new URL(Astro.request.url);
const currentPage = parseInt(url.searchParams.get("page") || "1");
const currentCategory = url.searchParams.get("category");
const start = (currentPage - 1) * PAGE_SIZE;
const end = start + PAGE_SIZE;

const allProducts = await fetchProductsFromSanity(currentCategory);
const totalCount = allProducts.length;
const totalPages = Math.ceil(totalCount / PAGE_SIZE);
const products = allProducts.slice(start, end);

const paginationLinks = [];
const maxVisiblePages = 5;
const pageGroup = Math.floor((currentPage - 1) / maxVisiblePages);
const startPage = pageGroup * maxVisiblePages + 1;
const endPage = Math.min(startPage + maxVisiblePages - 1, totalPages);
if (startPage > 1) {
  paginationLinks.push({ label: "‚Üê", page: startPage - 1 });
}

for (let page = startPage; page <= endPage; page++) {
  paginationLinks.push({ label: page.toString(), page });
}

if (endPage < totalPages) {
  paginationLinks.push({ label: "‚Üí", page: endPage + 1 });
}
---


<BaseLayout>
  <script type="module" is:inline>
    const sanityProjectId = import.meta.env.PUBLIC_SANITY_PROJECT_ID;
    const sanityApiToken = import.meta.env.PUBLIC_SANITY_API_TOKEN;
    if (sanityProjectId && sanityApiToken) {
      window.SANITY_PROJECT_ID = sanityProjectId;
      window.SANITY_API_TOKEN = sanityApiToken;
    } else {
      console.error("Missing Sanity credentials");
    }
  </script>
  
  <section class="max-w-7xl mx-auto text-white">

    <!-- Hero Section -->
    <div class="relative w-full h-[60vh] sm:h-[70vh] lg:h-[80vh] xl:h-[90vh] overflow-hidden">
      <img src="/images/shop background.png" alt="Shop Banner" class="w-full h-full object-cover shadow-lg" />
      
      <!-- Overlay Content -->
      <div class="absolute inset-0 flex flex-col items-center justify-end text-center pb-[16vh] sm:pb-[18vh] md:pb-[20vh] lg:pb-[22vh] xl:pb-[24vh]">
        <h1 class="text-4xl sm:text-5xl lg:text-6xl xl:text-7xl font-borg text-primary leading-none">SHOP</h1>
        <p class="mt-2 text-base sm:text-xl lg:text-2xl font-ethno text-white tracking-wide">
          Precision. Power. Performance.
        </p>
      </div>
    </div>
  </section>

  <section class="max-w-7xl mx-10 px-4">
    <!-- Category Tabs -->
    <div id="category-tabs" class="flex flex-wrap gap-3 text-sm font-captain mt-10">
      <!-- JS will populate tabs here -->
    </div>

    <!-- Product Page Filters -->
    <ProductPageFilters currentCategory={currentCategory} />

    <!-- Product Grid -->
    <div id="product-grid" class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-10 pt-8">
      {products.map(product => (
        <ProductCard product={product} />
      ))}
    </div>

    <div id="pagination" class="flex justify-center mt-12 gap-2">
      {
        paginationLinks.map(({ label, page }) => {
          const isActive = page === currentPage;
          return (
            <a
              href={`/shop?page=${page}`}
              class={`px-3 py-1 rounded-md transition duration-200 text-sm font-bold ${
                isActive 
                  ? 'bg-primary text-black shadow-md'
                : 'bg-black/50 text-white hover:bg-red-600 hover:text-white'
              }`}
            >
              {label}
            </a>
          );
        })
      }
    </div>
  </section>

  <script type="module" is:inline>
    const fetchCategories = async () => {
      const query = `*[_type == "category"]{ "title": title, "slug": slug.current }`;
      const result = await fetch(
        `https://${window.SANITY_PROJECT_ID}.api.sanity.io/v1/data/query/production?query=${encodeURIComponent(query)}`,
        {
          headers: {
            Authorization: "Bearer " + window.SANITY_API_TOKEN,
          },
        }
      ).then(res => res.json());
      return result.result || [];
    };

    const renderCategoryTabs = async () => {
      const categories = await fetchCategories();
      console.log("üì¶ Categories fetched:", categories);
      categoryTabs.innerHTML = `<a href="/shop" class="tab ${!currentCategory ? 'active' : ''}">All</a>`;
      categories.forEach(cat => {
        const slug = cat.slug || cat.title;
        const isActive = slug === currentCategory;
        const a = document.createElement("a");
        a.href = `/shop?category=${slug}`;
        a.className = `tab ${isActive ? 'active' : ''}`;
        a.innerText = cat.title;
        categoryTabs.appendChild(a);
      });
      
    };
    
    const currentCategory = new URLSearchParams(window.location.search).get("category");
    renderCategoryTabs();

    document.addEventListener("filterChange", (e) => {
      currentFilters = e.detail;
      currentPage = 1;
      // renderProducts();
    });
  </script>
  <style>
       #pagination a:hover {
      color: black !important;
    }
  </style>
</BaseLayout>