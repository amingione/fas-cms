---
import BaseLayout from '../../layouts/BaseLayout.astro';

export const prerender = false;

const SANITY_PROJECT_ID = import.meta.env.PUBLIC_SANITY_PROJECT_ID;
const SANITY_API_TOKEN = import.meta.env.PUBLIC_SANITY_API_TOKEN;
---

<BaseLayout>
  <section class="max-w-7xl mx-auto px-6 py-12 text-white space-y-10">
    <h1 class="text-3xl font-ethno font-bold text-accent">Shop</h1>

    <!-- Category Tabs -->
    <div id="category-tabs" class="flex flex-wrap gap-3 text-sm font-captain">
      <button class="tab active" data-category="">All</button>
      <button class="tab" data-category="Charger">Charger</button>
      <button class="tab" data-category="Challenger">Challenger</button>
      <button class="tab" data-category="Trackhawk">Trackhawk</button>
      <button class="tab" data-category="TRX">TRX</button>
    </div>

    <!-- Sort -->
    <div class="flex items-center gap-4 text-sm font-captain">
      <label for="sort" class="text-primary">Sort:</label>
      <select id="sort" class="bg-black border border-gray-700 px-3 py-1 rounded">
        <option value="price">Price</option>
        <option value="horsepower">Horsepower</option>
      </select>
    </div>

    <!-- Product Grid -->
    <div id="product-grid" class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-8 pt-6">
      <!-- JS populates this -->
    </div>

    <!-- Pagination -->
    <div id="pagination" class="flex justify-center mt-12">
      <!-- JS populates this -->
    </div>
  </section>

  <script is:inline>
    const SANITY_PROJECT_ID = import.meta.env.PUBLIC_SANITY_PROJECT_ID;
    const SANITY_API_TOKEN = import.meta.env.PUBLIC_SANITY_API_TOKEN;

    const grid = document.getElementById('product-grid');
    const pagination = document.getElementById('pagination');
    const tabs = document.querySelectorAll('.tab');
    const sortSelect = document.getElementById('sort');

    const PAGE_SIZE = 9;
    let currentPage = 1;
    let currentCategory = '';
    let currentSort = 'price';

    const fetchProducts = async () => {
      const start = (currentPage - 1) * PAGE_SIZE;
      const end = start + PAGE_SIZE;
      const filters = [];

      if (currentCategory) {
        filters.push(`"${currentCategory}" in categories[]->title`); // Added missing semicolon
      }

      const filterString = filters.length ? `*[${filters.join(' && ')}]` : `*[]`;
      const sortString = `| order(${currentSort} asc)[${start}...${end}]`;
      const query = `${filterString} ${sortString} {
        _id, title, price, horsepower, tune_required, slug { current }, images[]{ asset->{ url } }
      }`;

      const result = await fetch(
        `https://${SANITY_PROJECT_ID}.api.sanity.io/v1/data/query/production?query=${encodeURIComponent(query)}`,
        {
          headers: {
            Authorization: "Bearer " + SANITY_API_TOKEN,
          },
        }
      ).then(res => res.json());

      return result.result || [];
    };

    const fetchCount = async () => {
      const filters = [];
      if (currentCategory) {
        filters.push(`"${currentCategory}" in categories[]._ref`);
      }
        const query = `count(*[${filters.join(' && ')}])`;
        const result = await fetch(
          "https://" + SANITY_PROJECT_ID + ".api.sanity.io/v1/data/query/production?query=" + encodeURIComponent(query),
          {
            headers: {
              Authorization: "Bearer " + SANITY_API_TOKEN,
            },
          }
        ).then(res => res.json());
  
        return result.result || 0;
      };
          