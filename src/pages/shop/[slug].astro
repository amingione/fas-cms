---
import BaseLayout from '../../layouts/BaseLayout.astro';

const { slug } = Astro.params;

if (!slug) {
  console.error("❌ Missing slug parameter.");
  throw new Error("Missing slug parameter.");
}

// Fetch the product details based on the slug
const query = `*[_type == "product" && slug.current == "${slug}"][0]{
  _id,
  title,
  price,
  averageHorsepower,
  tune_required,
  "slug": coalesce(slug.current, slug),
  images[]{ asset->{ url } },
  description,
  relatedProducts[]->{
    _id,
    title,
    price,
    "slug": coalesce(slug.current, slug),
    images[]{ asset->{ url } }
  },
  upsellProducts[]->{
    _id,
    title,
    price,
    "slug": coalesce(slug.current, slug),
    images[]{ asset->{ url } }
  }
}`;

let product = null;

try {
  const response = await fetch(`https://${process.env.PUBLIC_SANITY_PROJECT_ID}.api.sanity.io/v1/data/query/${process.env.PUBLIC_SANITY_DATASET}?query=${encodeURIComponent(query)}`, {
    headers: {
      Authorization: `Bearer ${process.env.SANITY_API_TOKEN}`
    }
  });

  const json = await response.json();
  product = json.result || null;
} catch (err) {
  console.error(`❌ Failed to fetch product with slug "${slug}":`, err);
}

if (!product) {
  console.error(`❌ Product with slug "${slug}" not found.`);
}
---

<div id="toast" class="fixed bottom-6 right-6 z-50 hidden px-4 py-3 rounded-lg bg-white/90 text-black shadow-lg font-semibold transition-all duration-300 opacity-0"></div>

<script>
  function showToast(message) {
    const toast = document.getElementById('toast');
    if (!toast) return;
    toast.textContent = message;
    toast.classList.remove('hidden', 'opacity-0');
    toast.classList.add('opacity-100');
    setTimeout(() => {
      toast.classList.remove('opacity-100');
      toast.classList.add('opacity-0');
      setTimeout(() => {
        toast.classList.add('hidden');
      }, 300);
    }, 2500);
  }

  document.addEventListener('DOMContentLoaded', () => {
    const addToCartBtn = document.getElementById('add-to-cart');
    const productDataScript = document.getElementById('product-data');
    const product = productDataScript?.textContent ? JSON.parse(productDataScript.textContent) : null;

    if (addToCartBtn && product) {
      addToCartBtn.addEventListener('click', () => {
        fetch('/api/cart', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            productId: product._id,
            quantity: 1,
            sessionId: window.localStorage.getItem('fas_session') || 'guest-session'
          })
        }).then(res => {
          if (res.ok) showToast('✅ Added to cart!');
          else showToast('❌ Failed to add to cart.');
        });
      });
    }
  });
</script>

<script type="application/json" id="product-data">
  {JSON.stringify(product || {})}
</script>

<BaseLayout>
  {product ? (
    <section class="py-12 max-w-6xl mx-auto px-4">
      <nav class="text-sm text-gray-400 mb-6">
        <a href="/" class="hover:text-white">Home</a> / 
        <a href="/shop" class="hover:text-white">Shop</a> / 
        <span class="text-white font-medium">{product.title}</span>
      </nav>

      <div class="grid md:grid-cols-2 gap-10 items-start">
        <img src={product.images?.[0]?.url || '/images/placeholder.png'} alt={product?.title || 'Product image'} class="rounded-lg w-full object-cover shadow-lg" />

        <div>
          <h1 class="text-4xl font-bold text-white mb-4">{product.title}</h1>
          <p class="text-2xl text-accent font-bold mb-4">${product.price}</p>
          <p class="text-white/80 mb-6">{product.description || 'No description available.'}</p>

          <ul class="text-white/60 mb-6 space-y-1 text-sm">
            <li><strong>Horsepower:</strong> {product.averageHorsepower || 'N/A'}</li>
            <li><strong>Tune Required:</strong> {product.tune_required || 'Unknown'}</li>
          </ul>

          <div class="flex space-x-4 overflow-x-auto mb-6">
            {product.images?.map((img, i) => (
              <img src={img.url} alt={`Image ${i + 1}`} class="h-24 w-24 rounded object-cover border border-white/10" />
            ))}
          </div>

          <button
            id="add-to-cart"
            class="bg-accent text-black px-6 py-3 rounded font-bold hover:bg-red-600 transition"
          >
            Add to Cart
          </button>
        </div>
      </div>
    </section>
  ) : (
    <section class="py-12 max-w-6xl mx-auto px-4 text-center text-white">
      <h1 class="text-3xl font-bold mb-4">Product Not Found</h1>
      <p>We couldn’t find the product you're looking for.</p>
      <a href="/shop" class="text-accent underline mt-4 inline-block">Back to Shop</a>
    </section>
  )}
</BaseLayout>

{product?.relatedProducts?.length > 0 && (
  <section class="mt-20 max-w-6xl mx-auto px-4">
    <h2 class="text-2xl font-semibold text-white mb-6">Related Products</h2>
    <div class="grid md:grid-cols-3 gap-6">
      {product.relatedProducts.map((related) => (
        <a
          href={`/shop/${related.slug}`}
          class="block bg-white/5 rounded-lg p-4 text-white hover:bg-white/10 transition"
        >
          <img
            src={related.images?.[0]?.url || '/images/placeholder.png'}
            alt={related.title}
            class="rounded w-full h-40 object-cover mb-4"
          />
          <h3 class="text-lg font-bold">{related.title}</h3>
          <p class="text-accent font-semibold">${related.price}</p>
        </a>
      ))}
    </div>
  </section>
)}

{product?.upsellProducts?.length > 0 && (
  <section class="mt-20 max-w-6xl mx-auto px-4">
    <h2 class="text-2xl font-semibold text-white mb-6">You May Also Like</h2>
    <div class="grid md:grid-cols-3 gap-6">
      {product.upsellProducts.map((upsell) => (
        <a
          href={`/shop/${upsell.slug}`}
          class="block bg-white/5 rounded-lg p-4 text-white hover:bg-white/10 transition"
        >
          <img
            src={upsell.images?.[0]?.url || '/images/placeholder.png'}
            alt={upsell.title}
            class="rounded w-full h-40 object-cover mb-4"
          />
          <h3 class="text-lg font-bold">{upsell.title}</h3>
          <p class="text-accent font-semibold">${upsell.price}</p>
        </a>
      ))}
    </div>
  </section>
)}
</file>
