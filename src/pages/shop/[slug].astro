---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getProductBySlug, getSimilarProducts } from '../../lib/sanity-utils';

const { slug } = Astro.params;

// Fetch product data based on the slug
let product = null;
let similarProducts = [];
try {
  product = await getProductBySlug(slug);
  if (!product) {
    throw new Error(`Product with slug "${slug}" not found.`);
  }

  // Fetch similar products based on category or tags
  similarProducts = await getSimilarProducts(product.category, slug);
} catch (err) {
  console.error("❌ Failed to fetch product or similar products:", err);
  return Astro.redirect('/shop'); // Redirect to shop if product not found
}
---

<BaseLayout>
  <div class="container mx-auto px-4 py-10 text-white" style="padding-top: 80px;">
    <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
      <!-- Product Image -->
      <div class="flex justify-center items-center">
        <img
          src={product.images?.[0]?.asset?.url || '/placeholder.png'}
          alt={product.title}
           class="w-full max-w-md object-contain rounded-lg shadow-lg"
        />
      </div>

      <!-- Product Details -->
      <div>
        <h1 class="text-3xl font-ethno mb-4">{product.title}</h1>
        <p class="text-xl text-primary font-borg mb-4">
          {typeof product.price === 'number' ? `$${product.price.toFixed(2)}` : 'Price not available'}
        </p>
        <p class="text-gray-300 font-cyber mb-6">{product.description || 'No description available.'}</p>

        <!-- Add to Cart Button -->
        <button
          id="add-to-cart"
          class="bg-primary font-kwajong text-white px-6 py-2 rounded-lg hover:bg-red-600 transition"
        >
          Add to Cart
        </button>

        <!-- Hidden Product Data -->
        <div id="product-json" class="hidden">
          {JSON.stringify(product)}
        </div>
      </div>
    </div>

    <!-- You May Also Like Section -->
    <div class="mt-16">
      <h2 class="text-2xl font-borg mb-6">You May Also Like</h2>
      <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6">
        {similarProducts.map(similarProduct => (
          <a
            href={`/shop/${similarProduct.slug.current}`}
            class="block bg-black/10 rounded-lg shadow-md hover:shadow-lg transition p-4"
          >
            <img
              src={similarProduct.images?.[0]?.asset?.url || '/placeholder.png'}
              alt={similarProduct.title}
              class="w-full h-48 object-cover rounded-md mb-4"
            />
            <h3 class="text-lg font-semibold">{similarProduct.title}</h3>
            <p class="text-primary font-bold">
              {typeof similarProduct.price === 'number' ? `$${similarProduct.price.toFixed(2)}` : 'Price not available'}
            </p>
          </a>
        ))}
      </div>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const data = document.getElementById('product-json');
      const button = document.getElementById('add-to-cart');

      if (!data || !button) return;

      let product;
      try {
        product = JSON.parse(data.textContent.trim());
      } catch (err) {
        console.error("❌ Could not parse product data:", err);
        return;
      }

      button.addEventListener('click', () => {
        try {
          const cart = JSON.parse(localStorage.getItem('fas_cart') || '[]');
          const found = cart.find(item => item.id === product._id);
          if (found) {
            found.quantity += 1;
          } else {
            cart.push({ id: product._id, name: product.title, price: product.price, quantity: 1 });
          }
          localStorage.setItem('fas_cart', JSON.stringify(cart));
          window.dispatchEvent(new Event('cart-updated'));
          alert("✅ Added to cart!");
        } catch (err) {
          console.error("❌ Failed to update cart", err);
          alert("⚠️ Could not add to cart.");
        }
      });
    });
  </script>
</BaseLayout>