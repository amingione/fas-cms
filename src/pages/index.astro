---
import BaseLayout from '../layouts/BaseLayout.astro';
import * as sanity from '../lib/sanity-utils';
import { Hero } from '@components/Hero.tsx';
import { Services } from '@components/Services.tsx';
import { Products } from '@components/Products.tsx';
import { About } from '@components/About.tsx';
import { Contact } from '@components/Contact.tsx';
import { Footer } from '@components/Footer.tsx';
import { IGLASecurity } from '@components/IGLASecurity.tsx';
import { TruckPackagesHero } from '@components/TruckPackagesHero.tsx';
import { LuxuryFeatures } from '@components/LuxuryFeatures.tsx';
import { CustomFabrication } from '@components/CustomFabrication.tsx';
import { LuxuryTestimonials } from '@components/LuxuryTestimonials.tsx';
import { WheelsHero } from '@/components/WheelsHero.tsx';

const url = new URL(Astro.request.url);
const v2Param = url.searchParams.get('v2');
// Default to the new V2 homepage; allow opt-out via ?v2=0
const showV2 = v2Param === '0' ? false : true;

let featuredProducts: any[] = [];
try {
  // Try to resolve a configured Sanity client from your utils module
  const _client: any = (sanity as any).sanityClient
    ?? (sanity as any).client
    ?? ((sanity as any).getClient ? (sanity as any).getClient() : null);

  if (_client && typeof _client.fetch === 'function') {
    // 1) Prefer PUBLISHED docs where featured is a boolean true
    let booleanTry: any[] = [];
    try {
      booleanTry = await _client.fetch(
        `*[_type == "product" && !(_id in path("drafts.**")) && coalesce(featured, false) == true && defined(slug.current)][0..7]{
          _id,
          name,
          title,
          "slug": slug.current,
          price,
          "imageUrl": coalesce(
            image.asset->url,
            mainImage.asset->url,
            images[0].asset->url,
            thumbnail.asset->url,
            thumb.asset->url
          )
        }`
      );
    } catch {}
    console.log('[Featured] boolean=true count:', Array.isArray(booleanTry) ? booleanTry.length : 0);
    try {
      const cfg = (sanity as any).config || (sanity as any).clientConfig || (sanity as any).defaultClientConfig || {};
      console.log('[Sanity] projectId:', cfg.projectId, 'dataset:', cfg.dataset);
    } catch {}

    featuredProducts = Array.isArray(booleanTry) ? booleanTry : [];

    // 2) Fallback: some datasets store featured as a string "true"
    if (!featuredProducts.length) {
      let stringTry: any[] = [];
      try {
        stringTry = await _client.fetch(
          `*[_type == "product" && !(_id in path("drafts.**")) && featured == "true" && defined(slug.current)][0..7]{
            _id,
            name,
            title,
            "slug": slug.current,
            price,
            "imageUrl": coalesce(
              image.asset->url,
              mainImage.asset->url,
              images[0].asset->url,
              thumbnail.asset->url,
              thumb.asset->url
            )
          }`
        );
      } catch {}
      console.log('[Featured] string "true" count:', Array.isArray(stringTry) ? stringTry.length : 0);
      try {
        const cfg = (sanity as any).config || (sanity as any).clientConfig || (sanity as any).defaultClientConfig || {};
        console.log('[Sanity] projectId:', cfg.projectId, 'dataset:', cfg.dataset);
      } catch {}
      featuredProducts = Array.isArray(stringTry) ? stringTry : [];
    }
  }
} catch (err) {
  console.error('Featured products fetch failed', err);
}
---


<BaseLayout>

<!-- HERO -->
<section class="relative bg-black/20">
  <img src="/images/hp-herofas.png" alt="FAS Hero TRX" class="w-full h-auto object-cover object-top md:object-center overflow-hidden" />
</section>

{showV2 && (
  <>
    <!-- Figma sections (header untouched) -->
    <main class="flex flex-col">
      
      <section id="hero" class="px-4 md:px-6">
        <Hero client:load />
      </section>

      <section id="TruckPackagesHero" class="px-4 md:px-6">
        <TruckPackagesHero client:load />
      </section>

      <section id="CustomFabrication" class="px-4 md:px-6">
        <CustomFabrication client:load />
      </section>

      <section id="IGLASecurity" class="px-4 md:px-6">
        <IGLASecurity client:load />
      </section>

      <section id="LuxuryFeatures" class="px-4 md:px-6">
        <LuxuryFeatures client:load />
      </section>

      <section id="services" class="px-4 md:px-6">
        <Services client:load />
      </section>

      <section id="WheelsHero" class="px-4 md:px-6">
        <WheelsHero client:load />
      </section>

      <section id="highlights" class="px-4 md:px-6">
        <!-- TODO: Wire Sanity featured later; styling-only for now -->
        <Products client:load />
      </section>


      <section id="about" class="px-4 md:px-6">
        <About client:load />
      </section>

      <section id="contact" class="px-4 md:px-6">
        <Contact client:load />
      </section>

      <section id="LuxuryTestimonials" class="px-4 md:px-6">
        <LuxuryTestimonials client:load />
      </section>
    </main>


    <footer class="mt-24">
      <Footer client:load />
    </footer>
  </>
)}

</BaseLayout>