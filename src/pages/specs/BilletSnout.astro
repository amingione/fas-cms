---
import BaseLayout from '@layouts/BaseLayout.astro';
import { loadPageDoc, inlineFieldAttrs, inlineObjectId } from '@lib/content';
import SectionRenderer from '@/components/SectionRenderer.astro';
import ProductSpecSheet from '@components/specs/ProductSpecSheet.astro';
import { serializeJsonLd } from '@lib/utils';

const pageDoc: any = await loadPageDoc('BilletSnoutSpecs');

const pageTitle: string = pageDoc?.title ?? 'Billet Supercharger Snout â€” Spec Sheet';
const pageDescription =
  'Explore billet supercharger snout options for 2.4L Hellcat platforms with airflow-focused inlet geometry, rigid construction, and OE-style sealing.';

const variants = [
  {
    id: 'hellcat-billet-snout',
    title: '2.4L Hellcat Billet Supercharger Snout',
    description:
      'CNC-machined billet supercharger snout engineered for high-flow inlet geometry and precise alignment under belt load.',
    imageSrc: '/images/snouts/FAS-Billet-Snout.png',
    imageAlt: 'FAS Motorsports Billet Supercharger Snout',
    specs: [
      { label: 'Material', value: 'Billet aluminum, CNC-machined' },
      { label: 'Machining', value: 'Multi-axis CNC for alignment and concentricity' },
      { label: 'Inlet', value: 'High-flow geometry; supports large throttle bodies' },
      { label: 'Precision', value: 'Rigid body to stabilize tracking under belt load' },
      { label: 'Finish', value: 'Anodized for durability' },
      { label: 'Compatibility', value: '2.4L Hellcat supercharger applications' }
    ],
    about: [
      'Resists flex under belt load to help maintain shaft alignment and belt tracking.',
      'Flow-optimized inlet reduces turbulence for consistent boost response.'
    ],
    ctaHref: '/shop/2-4l-hellcat-billet-supercharger-snout',
    ctaLabel: 'View 2.4L Billet Snout'
  },
  {
    id: 'hellcat-billet-turbo-snout',
    title: '2.4L Hellcat Billet Turbo Snout',
    description:
      'Billet turbo snout designed to support high-flow turbo inlet routing while maintaining OE-level interfaces and sealing.',
    imageSrc: '/images/snouts/FAS-Billet-Snout-Front.png',
    imageAlt: 'FAS Motorsports Billet Turbo Snout',
    specs: [
      { label: 'Material', value: 'Billet aluminum, CNC-machined' },
      { label: 'Geometry', value: 'Optimized inlet transitions for turbo airflow' },
      { label: 'Interfaces', value: 'OE-style mounting and sensor provisions' },
      { label: 'Finish', value: 'Anodized for corrosion resistance' },
      { label: 'Compatibility', value: '2.4L Hellcat turbo inlet applications' }
    ],
    about: [
      'Supports clean turbo inlet routing with robust billet construction for stability and sealing.',
      'Designed to install with OE hardware while accommodating high-flow setups.'
    ],
    ctaHref: '/shop/2-4l-hellcat-billet-turbo-snout',
    ctaLabel: 'View Billet Turbo Snout'
  }
];

const requestUrl = new URL(Astro.request.url);
const canonical = `${requestUrl.origin}${requestUrl.pathname}`;
const ensureAbsolute = (path?: string | null) => {
  if (!path) return undefined;
  if (/^https?:/i.test(path)) return path;
  try {
    return new URL(path, requestUrl.origin).toString();
  } catch {
    return undefined;
  }
};

const primaryImage = ensureAbsolute(variants[0]?.imageSrc);
const structuredData = {
  '@context': 'https://schema.org',
  '@type': 'ItemList',
  name: pageTitle,
  description: pageDescription,
  url: canonical,
  itemListElement: variants.map((variant, index) => ({
    '@type': 'ListItem',
    position: index + 1,
    item: {
      '@type': 'Product',
      name: variant.title,
      description: variant.description,
      url: variant.ctaHref ? ensureAbsolute(variant.ctaHref) : canonical,
      image: ensureAbsolute(variant.imageSrc),
      brand: { '@type': 'Brand', name: 'F.A.S. Motorsports' },
      category: 'Supercharger Components',
      additionalProperty: variant.specs.map((spec) => ({
        '@type': 'PropertyValue',
        name: spec.label,
        value: spec.value
      }))
    }
  }))
};
---
<BaseLayout title={pageTitle} description={pageDescription} canonical={canonical} ogImage={primaryImage}>
  <Fragment slot="head">
    <meta property="og:type" content="product.group" />
    <script
      type="application/ld+json"
      set:html={serializeJsonLd(structuredData)}
    />
  </Fragment>
  <div {...inlineObjectId('content/pages/BilletSnoutSpecs.json')}>
    <div aria-hidden="true" class="hidden" {...inlineFieldAttrs('title')}>
      {pageTitle}
    </div>

    {Array.isArray(pageDoc?.sections) && pageDoc.sections.length > 0 && (
      <SectionRenderer sections={pageDoc.sections} baseFieldPath="sections" />
    )}
    <section class="mt-5 pt-5">
      {variants.map((variant) => (
        <ProductSpecSheet
          title={variant.title}
          description={variant.description}
          imageSrc={variant.imageSrc}
          imageAlt={variant.imageAlt}
          specs={variant.specs}
          about={variant.about}
          ctaHref={variant.ctaHref}
          ctaLabel={variant.ctaLabel}
        />
      ))}
    </section>
  </div>
</BaseLayout>
