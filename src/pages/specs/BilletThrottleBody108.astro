---
import BaseLayout from '@layouts/BaseLayout.astro';
import { loadPageDoc, inlineFieldAttrs, inlineObjectId } from '@lib/content';
import SectionRenderer from '@/components/SectionRenderer.astro';
import ProductSpecSheet from '@components/specs/ProductSpecSheet.astro';
import { serializeJsonLd } from '@lib/utils';

// Backed by content/pages/BilletThrottleBody108Specs.json
const pageDoc: any = await loadPageDoc('BilletThrottleBody108Specs');

const pageTitle: string = pageDoc?.title ?? '108mm Billet Throttle Body â€” Spec Sheet';
const pageDescription =
  'Comprehensive specifications for the F.A.S. Motorsports 108mm billet throttle body, covering airflow hardware, machining, and fitment.';

const specSheet = {
  title: pageTitle,
  description:
    'High-flow, CNC-machined billet throttle body tuned for smooth driveability and repeatable airflow on high-boost builds.',
  imageSrc: '/images/billetParts/108mm-TB-fas.webp',
  imageAlt: 'FAS Motorsports 108mm Billet Throttle Body',
  specs: [
    { label: 'Material', value: 'Billet aluminum, CNC-machined' },
    { label: 'Bore Class', value: '108 mm high-flow' },
    { label: 'Blade & Shaft', value: 'Low-drag profile, sealed shaft support' },
    { label: 'Electronics', value: 'OE-style connector and calibration compatibility' },
    { label: 'Finish', value: 'Anodized for durability and heat management' },
    { label: 'Compatibility', value: 'Hellcat/Gen III HEMI and compatible high-flow intakes' }
  ],
  about: [
    'Engineered to reduce turbulence and improve response at large throttle openings while maintaining smooth part-throttle control.',
    'Built from billet for rigidity and thermal stability in demanding engine bays.'
  ],
  ctaHref: '/shop/fas-motorsports-108mm-billet-throttle-body',
  ctaLabel: 'View 108mm Billet Throttle Body'
};

const requestUrl = new URL(Astro.request.url);
const canonical = `${requestUrl.origin}${requestUrl.pathname}`;
const ensureAbsolute = (path?: string | null) => {
  if (!path) return undefined;
  if (/^https?:/i.test(path)) return path;
  try {
    return new URL(path, requestUrl.origin).toString();
  } catch {
    return undefined;
  }
};

const structuredData = {
  '@context': 'https://schema.org',
  '@type': 'Product',
  name: specSheet.title,
  description: specSheet.description,
  url: canonical,
  image: ensureAbsolute(specSheet.imageSrc),
  brand: { '@type': 'Brand', name: 'F.A.S. Motorsports' },
  category: 'Intake Components',
  additionalProperty: specSheet.specs.map((spec) => ({
    '@type': 'PropertyValue',
    name: spec.label,
    value: spec.value
  }))
};
---
<BaseLayout title={pageTitle} description={pageDescription} canonical={canonical} ogImage={ensureAbsolute(specSheet.imageSrc)}>
  <Fragment slot="head">
    <meta property="og:type" content="product" />
    <script
      type="application/ld+json"
      set:html={serializeJsonLd(structuredData)}
    />
  </Fragment>
  <div {...inlineObjectId('content/pages/BilletThrottleBody108Specs.json')}>
    <div aria-hidden="true" class="hidden" {...inlineFieldAttrs('title')}>
      {pageTitle}
    </div>

    {Array.isArray(pageDoc?.sections) && pageDoc.sections.length > 0 && (
      <SectionRenderer sections={pageDoc.sections} baseFieldPath="sections" />
    )}

    <section class="mt-5 pt-5">
      <ProductSpecSheet
        title={specSheet.title}
        description={specSheet.description}
        imageSrc={specSheet.imageSrc}
        imageAlt={specSheet.imageAlt}
        specs={specSheet.specs}
        about={specSheet.about}
        ctaHref={specSheet.ctaHref}
        ctaLabel={specSheet.ctaLabel}
      />
    </section>
  </div>
</BaseLayout>
