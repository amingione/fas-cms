---
import BaseLayout from '@layouts/BaseLayout.astro';
import { loadPageDoc, inlineFieldAttrs, inlineObjectId } from '@lib/content';
import SectionRenderer from '@/components/SectionRenderer.astro';
const pageDoc: any = await loadPageDoc('porting');
import Button from '@/components/Button.astro';

const hero = pageDoc?.hero ?? {};
const heroImage = hero?.image ?? {};
const heroTags: string[] = Array.isArray(hero?.tags) ? hero.tags : [];
const heroTagsHasContent = heroTags.length > 0;
const heroTagFallback = ['Flow-bench guided', 'Hand finish', 'Matched interfaces', 'OEM-level fit'];
const featurePills: string[] = Array.isArray(pageDoc?.featurePills) ? pageDoc.featurePills : [];
const featurePillsHasContent = featurePills.length > 0;
const featurePillsFallback = ['Flow-bench guided', 'Hand finish', 'Matched components', 'OEM-level fit & finish'];
const featurePillsToRender = featurePillsHasContent ? featurePills : featurePillsFallback;




const portingItems: Array<{ title?: string; desc?: string }> = Array.isArray(pageDoc?.portingItems)
  ? pageDoc.portingItems
  : [];
const portingItemsHasContent = portingItems.length > 0;
const portingItemsFallback = [
  {
    title: 'Supercharger',
    desc: 'Improves airflow and boost efficiency. Gains of 20–40+ WHP are common when paired with tuning.'
  },
  {
    title: 'Bearing Plate',
    desc: 'Reduce turbulence and drag on the rotor path, enhancing blower response.'
  }
];
const portingItemsToRender = portingItemsHasContent ? portingItems : portingItemsFallback;
const methodology = pageDoc?.methodology ?? {};
const methodologyItems: string[] = Array.isArray(methodology?.items) ? methodology.items : [];
const deliverables: string[] = Array.isArray(methodology?.deliverables) ? methodology.deliverables : [];
const methodologyTitle: string = methodology?.title ?? 'Methodology';
const deliverablesTitle: string = methodology?.deliverablesTitle ?? 'Deliverables';
const methodologyItemsToRender = methodologyItems.length
  ? methodologyItems
  : [
      'Baseline measurement and inspection; document casting lines and restrictions.',
      'Hand-blend for surface finish and transition quality.',
      'Port-matching across interfaces (snout ⇄ TB ⇄ case ⇄ manifold).',
      'Final inspection: CSA verification, concentricity, fastener land integrity.'
    ];
const deliverablesToRender = deliverables.length
  ? deliverables
  : [
      'Before/after photos & notes.',
      'Recommended TB size / injector / belt guidance where applicable.',
      'Gasket surfaces protected; threads chased; components cleaned and bagged.',
      'Optional polish or ceramic coat on request.'
    ];
const summaryCards: Array<{ title?: string; body?: string }> = Array.isArray(pageDoc?.summaryCards)
  ? pageDoc.summaryCards
  : [];
const summaryCardsHasContent = summaryCards.length > 0;
const summaryCardsFallback = [
  {
    title: 'Typical Gains',
    body:
      'Supercharger/snout pairs commonly see +20–40 WHP with proper tuning and supporting mods. Cylinder head & intake work supports higher RPM power retention.'
  },
  { title: 'Turnaround', body: 'Most jobs 5–10 business days after parts are received. Expedited options available.' }
];
const summaryCardsToRender = summaryCardsHasContent ? summaryCards : summaryCardsFallback;
const ctaButtons: Array<{ label?: string; href?: string; variant?: string; size?: string }> = Array.isArray(
  pageDoc?.ctaButtons
)
  ? pageDoc.ctaButtons
  : [];
const ctaButtonsHasContent = ctaButtons.length > 0;
const ctaButtonFallback = [
  { label: 'Ask a Porting Specialist', href: '/contact', variant: 'default', size: 'md' },
  { label: 'Schedule Dropoff', href: '/schedule', variant: 'ghost', size: 'md' }
];
const ctaButtonsToRender = ctaButtonsHasContent ? ctaButtons : ctaButtonFallback;
---

<BaseLayout>
  <div {...inlineObjectId('content/pages/porting.json')}>
  <div aria-hidden="true" class="hidden" {...inlineFieldAttrs('title')}>{pageDoc?.title ?? 'Porting'}</div>
  {Array.isArray(pageDoc?.sections) && pageDoc.sections.length > 0 && (
    <SectionRenderer sections={pageDoc.sections} baseFieldPath="sections" />
  )}
  <!-- HERO (compact header, no full-screen background) -->
  <section class="section-divider section-divider-carbon bg-black/70 border-b border-white/20">
    <div class="mx-auto w-full max-w-7xl px-0 md:px-6 py-8 md:py-10 grid grid-cols-1 md:grid-cols-[1.2fr_0.8fr] gap-6 items-center">
      <div>
        <h1
          class="text-3xl md:text-5xl font-ethno text-accent mb-3"
          {...inlineFieldAttrs('hero.heading')}
        >
          {hero?.heading ?? pageDoc?.title ?? 'Porting Services'}
        </h1>
        <p
          class="text-white/80 max-w-[68ch] font-mono text-base md:text-lg"
          {...inlineFieldAttrs('hero.description')}
        >
          {hero?.description ?? 'Superchargers, snouts, throttle bodies, intake manifolds, and cylinder heads — blueprint-level porting for real, repeatable gains.'}
        </p>
        <div class="mt-5 flex flex-wrap gap-3 luxury-hover-scale" {...inlineFieldAttrs('hero.tags')}>
          {heroTagsHasContent
            ? heroTags.map((tag, idx) => (
                <span class="btn-glass btn-dark btn-xs" {...inlineFieldAttrs(`hero.tags[${idx}]`)}>
                  {tag || 'Tag'}
                </span>
              ))
            : heroTagFallback.map((tag) => (
                <span class="btn-glass btn-dark btn-xs">{tag}</span>
              ))}
        </div>
        <div class="mt-6 flex flex-col sm:flex-row gap-4">
          {ctaButtonsToRender.map((cta, idx) => {
            const fieldAttrs = ctaButtonsHasContent ? inlineFieldAttrs(`ctaButtons[${idx}]`) : {};
            return (
              <Button
                href={cta?.href || '#'}
                text={cta?.label || 'Call to Action'}
                size={(cta?.size as any) || 'md'}
                variant={(cta?.variant as any) || 'default'}
                {...fieldAttrs}
              />
            );
          })}
        </div>
      </div>
      <div class="order-first md:order-last">
        <figure class="rounded-xl border border-white/20 bg-black/50 overflow-hidden shadow-xl">
          <img
            src={heroImage?.src || '/images/snouts/fas-ported-snout.png'}
            alt={heroImage?.alt || 'Ported snout detail'}
            class="w-full h-[220px] md:h-[260px] object-cover"
            {...inlineFieldAttrs('hero.image.src')}
          />
          <span class="sr-only" aria-hidden="true" {...inlineFieldAttrs('hero.image.alt')}>
            {heroImage?.alt || 'Ported snout detail'}
          </span>
          <figcaption class="p-3 text-white/70 text-xs" {...inlineFieldAttrs('hero.image.caption')}>
            {heroImage?.caption || 'Ported snout: smoother transition, corrected CSA, matched to throttle body and case.'}
          </figcaption>
        </figure>
      </div>
    </div>
  </section>

  <!-- OVERVIEW STRIP -->
  <section class="luxury-hover-scale relative w-full bg-black/60 backdrop-blur-md border-b border-white/20">
    <div class="mx-auto w-full max-w-7xl px-0 md:px-6">
      <div class="grid grid-cols-2 md:grid-cols-4 gap-0" {...inlineFieldAttrs('featurePills')}>
        {featurePillsToRender.map((pill, idx) => {
          const fieldAttrs = featurePillsHasContent ? inlineFieldAttrs(`featurePills[${idx}]`) : {};
          const isLast = idx === featurePillsToRender.length - 1;
          return (
            <div
              class={`flex items-center gap-3 py-4 px-4 ${isLast ? '' : 'border-r border-white/20'}`}
              {...fieldAttrs}
            >
              <div class="w-2 h-2 rounded-full bg-accent"></div>
              <div class="text-white text-xs md:text-sm font-mono tracking-[0.14em]">{pill}</div>
            </div>
          );
        })}
      </div>
    </div>

    </div>
  </section>

  <!-- WHAT WE PORT (driven by data array) -->
  <section class="py-12 md:py-16">
    <div class="mx-auto w-full max-w-7xl px-0 md:px-6">
      <h2 class="text-center text-3xl md:text-4xl font-ethno text-accent mb-8 md:mb-12 tracking-wide">What We Port</h2>

      <div class="grid grid-cols-1 md:grid-cols-3 gap-4 md:gap-6" {...inlineFieldAttrs('portingItems')}>
        {portingItemsToRender.map((item, idx) => {
          const basePath = `portingItems[${idx}]`;
          const fieldAttrs = portingItemsHasContent ? inlineFieldAttrs(basePath) : {};
          return (
            <div class="group relative rounded-xl border border-white/20 bg-[#0b0b0c] overflow-hidden transition-transform duration-300 hover:-translate-y-1 hover:shadow-xl hover:shadow-black/50" {...fieldAttrs}>
              <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/20 to-transparent pointer-events-none"></div>
              <div class="relative p-5 z-10">
                <div class="text-primary font-ethno text-xl drop-shadow" {...(portingItemsHasContent ? inlineFieldAttrs(`${basePath}.title`) : {})}>
                  {item?.title || 'Component'}
                </div>
                <p class="text-white/75 text-sm font-mono mt-2 max-w-[60ch]" {...(portingItemsHasContent ? inlineFieldAttrs(`${basePath}.desc`) : {})}>
                  {item?.desc || ''}
                </p>
              </div>
            </div>
          );
        })}
      </div>
    </div>
  </section>

  <!-- METHOD & DELIVERABLES -->
  <section class="bg-black/70 border-y border-white/20 py-10 md:py-14">
    <div class="mx-auto w-full max-w-7xl px-0 md:px-6 grid md:grid-cols-2 gap-6 md:gap-10">
      <div class="rounded-xl border border-white/20 bg-black/60 p-5 shadow-xl">
        <h3 class="text-xl font-borg text-white mb-2" {...(methodology?.title ? inlineFieldAttrs('methodology.title') : {})}>
          {methodologyTitle}
        </h3>
        <ul class="list-disc pl-5 text-white/70 text-sm space-y-2" {...inlineFieldAttrs('methodology.items')}>
          {methodologyItemsToRender.map((item, idx) => (
            <li {...(methodologyItems.length ? inlineFieldAttrs(`methodology.items[${idx}]`) : {})}>
              {item}
            </li>
          ))}
        </ul>
      </div>
      <div class="rounded-xl border border-white/20 bg-black/60 p-5 shadow-xl">
        <h3 class="text-xl font-borg text-white mb-2" {...(methodology?.deliverablesTitle ? inlineFieldAttrs('methodology.deliverablesTitle') : {})}>
          {deliverablesTitle}
        </h3>
        <ul class="list-disc pl-5 text-white/70 text-sm space-y-2" {...inlineFieldAttrs('methodology.deliverables')}>
          {deliverablesToRender.map((item, idx) => (
            <li {...(deliverables.length ? inlineFieldAttrs(`methodology.deliverables[${idx}]`) : {})}>
              {item}
            </li>
          ))}
        </ul>
      </div>
    </div>
  </section>

  <!-- TURNAROUND / NOTES -->
  <section class="py-10 md:py-14">
    <div class="mx-auto w-full max-w-7xl px-0 md:px-6 grid md:grid-cols-3 gap-6" {...inlineFieldAttrs('summaryCards')}>
      {summaryCardsToRender.map((card, idx) => {
        const basePath = `summaryCards[${idx}]`;
        const fieldAttrs = summaryCardsHasContent ? inlineFieldAttrs(basePath) : {};
        return (
          <div class="rounded-xl border border-white/20 bg-black/60 p-5 shadow-xl" {...fieldAttrs}>
            <h3 class="text-lg font-borg text-white mb-2" {...(summaryCardsHasContent ? inlineFieldAttrs(`${basePath}.title`) : {})}>
              {card?.title || 'Summary'}
            </h3>
            <p class="text-white/70 text-sm leading-relaxed" {...(summaryCardsHasContent ? inlineFieldAttrs(`${basePath}.body`) : {})}>
              {card?.body || ''}
            </p>
          </div>
        );
      })}
    </div>
  </section>

  <!-- CTA -->
  <section class="bg-transparent py-12 md:py-16 text-center">
    <div class="flex flex-col gap-5 items-center" {...inlineFieldAttrs('ctaButtons')}>
      {ctaButtonsToRender.map((cta, idx) => {
        const fieldAttrs = ctaButtonsHasContent ? inlineFieldAttrs(`ctaButtons[${idx}]`) : {};
        return (
          <Button
            href={cta?.href || '#'}
            text={cta?.label || 'Call to Action'}
            size={(cta?.size as any) || 'md'}
            variant={(cta?.variant as any) || 'default'}
            {...fieldAttrs}
          />
        );
      })}
    </div>
  </section>
  </div>
</BaseLayout>
