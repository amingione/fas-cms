---
// src/pages/account/index.astro
import BaseLayout from "../../layouts/BaseLayout.astro";

// Basic login state: look for fas-auth session cookie
const cookie = Astro.request.headers.get('cookie') || '';
const readCookie = (name: string) => {
  const m = new RegExp(`(?:^|;\\s*)${name}=([^;]+)`).exec(cookie);
  return m?.[1] || null;
};
const isLoggedIn = Boolean(readCookie('fas_session'));

const requestUrl = new URL(Astro.request.url);
requestUrl.search = '';
requestUrl.hash = '';
const canonical = requestUrl.toString();

const pageTitle = isLoggedIn ? 'Account Dashboard' : 'Account Access';
const pageDescription = isLoggedIn
  ? 'Access your F.A.S. Motorsports dashboard for orders, quotes, invoices, and appointment details.'
  : 'Sign in or create a F.A.S. Motorsports account to track orders, quotes, and service appointments.';
---

<BaseLayout hideBrandTag={true} title={pageTitle} description={pageDescription} canonical={canonical}>
  <main class="relative text-white p-8 mt-10">
    {isLoggedIn ? (
      <section class="max-w-xl">
        <h1 class="text-2xl font-ethno text-primary mb-2">Account</h1>
        <p class="mb-4">You are signed in.</p>
        <div class="flex gap-3">
          <a href="/dashboard" class="px-4 py-2 rounded bg-primary text-accent font-ethno">Go to Dashboard</a>
          <a href="/api/auth/logout" class="px-4 py-2 rounded border border-white/30 font-ethno">Logout</a>
        </div>
      </section>
    ) : (
      <section class="max-w-xl">
        <h1 class="text-2xl font-ethno text-primary mb-2">Account</h1>
        <p class="mb-4">Log in with your email and password to access your dashboard.</p>
        <div class="space-y-3 max-w-sm">
          <div class="text-sm mb-2">
            <button id="mode-login" class="underline">Sign in</button>
            <span class="mx-2 opacity-50">â€¢</span>
            <button id="mode-signup" class="underline">Create an account</button>
          </div>
        </div>
        <form id="fas-login" class="space-y-3 max-w-sm">
          <div>
            <label class="block text-sm mb-1">Email</label>
            <input type="email" name="email" required class="w-full bg-white/5 border border-white/15 rounded px-3 py-2" />
          </div>
          <div>
            <label class="block text-sm mb-1">Password</label>
            <input type="password" name="password" required class="w-full bg-white/5 border border-white/15 rounded px-3 py-2" />
          </div>
          <button type="submit" class="px-4 py-2 rounded bg-primary text-accent font-ethno">Sign in</button>
        </form>
        <form id="fas-signup" class="space-y-3 max-w-sm hidden">
          <div>
            <label class="block text-sm mb-1">Name (optional)</label>
            <input type="text" name="name" class="w-full bg-white/5 border border-white/15 rounded px-3 py-2" />
          </div>
          <div>
            <label class="block text-sm mb-1">Email</label>
            <input type="email" name="email" required class="w-full bg-white/5 border border-white/15 rounded px-3 py-2" />
          </div>
          <div>
            <label class="block text-sm mb-1">Password</label>
            <input type="password" name="password" required minlength="8" class="w-full bg-white/5 border border-white/15 rounded px-3 py-2" />
          </div>
          <button type="submit" class="px-4 py-2 rounded bg-primary text-accent font-ethno">Create account</button>
        </form>
        <script>
          const $ = (s: string) => document.querySelector(s);
          const loginForm = $('#fas-login');
          const signupForm = $('#fas-signup');
          const modeLogin = $('#mode-login');
          const modeSignup = $('#mode-signup');
          function show(which: string) {
            if (!loginForm || !signupForm) return;
            if (which === 'signup') {
              signupForm.classList.remove('hidden');
              loginForm.classList.add('hidden');
            } else {
              signupForm.classList.add('hidden');
              loginForm.classList.remove('hidden');
            }
          }
          modeLogin?.addEventListener('click', (e) => { e.preventDefault(); show('login'); });
          modeSignup?.addEventListener('click', (e) => { e.preventDefault(); show('signup'); });
          document.getElementById('fas-login')?.addEventListener('submit', async (e) => {
            e.preventDefault();
            const form = e.target as HTMLFormElement;
            const data = Object.fromEntries(new FormData(form));
            const res = await fetch('/api/auth/login', { method: 'POST', headers: { 'content-type': 'application/json' }, body: JSON.stringify(data) });
            if (res.ok) {
              const rt = new URL(window.location.href).searchParams.get('returnTo') || '/dashboard';
              window.location.href = rt;
            } else {
              alert('Login failed');
            }
          });
          document.getElementById('fas-signup')?.addEventListener('submit', async (e) => {
            e.preventDefault();
            const form = e.target as HTMLFormElement;
            const data = Object.fromEntries(new FormData(form));
            const res = await fetch('/api/auth/signup', { method: 'POST', headers: { 'content-type': 'application/json' }, body: JSON.stringify(data) });
            if (res.ok) {
              const rt = new URL(window.location.href).searchParams.get('returnTo') || '/dashboard';
              window.location.href = rt;
            } else if (res.status === 409) {
              alert('An account with this email already exists. Please sign in.');
              show('login');
            } else {
              alert('Sign up failed');
            }
          });
        </script>
      </section>
    )}
  </main>
</BaseLayout>
