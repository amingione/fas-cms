---
// src/pages/account/index.astro
import BaseLayout from "../../layouts/BaseLayout.astro";
---
<BaseLayout hideBrandTag>
  <main class="min-h-screen text-white p-8">
    <div id="account-view"><p>Loading…</p></div>

    <script type="module">
      import { getAuth0Client } from "/src/lib/auth.ts";

      (async () => {
        const root = document.getElementById("account-view");
        const show = (html) => { if (root) root.innerHTML = html; };
        const buttonGroup = `
          <div class="flex gap-4">
            <button id="login" class="px-4 py-2 bg-primary text-black font-ethno">Log in</button>
            <button id="signup" class="px-4 py-2 border border-white/40 font-ethno">Sign up</button>
          </div>`;

        const withTimeout = (p, ms = 5000) => Promise.race([
          p,
          new Promise((_, rej) => setTimeout(() => rej(new Error('timeout')), ms))
        ]);

        try {
          // Create client with timeout to avoid stuck states
          const auth0 = await withTimeout(getAuth0Client(), 6000);

          // Complete Auth0 redirect if returning from the login/signup page
          if (window.location.search.includes("code=")) {
            try {
              await withTimeout(auth0.handleRedirectCallback(), 6000);
            } catch (e) {
              // Continue even if this fails; we’ll fall back to non‑authed UI
            }
            window.history.replaceState({}, document.title, window.location.pathname);
          }

          let authed = false;
          try {
            authed = await withTimeout(auth0.isAuthenticated(), 5000);
          } catch (e) {
            authed = false; // fall back gracefully
          }

          if (!authed) {
            show(`
              <h1 class="text-2xl mb-4 font-borg text-primary">Account</h1>
              <p class="mb-6">Log in or create an account to access your dashboard.</p>
              ${buttonGroup}
            `);
            document.getElementById("login")?.addEventListener("click", () =>
              auth0.loginWithRedirect({
                authorizationParams: { screen_hint: "login", redirect_uri: window.location.origin + "/account" },
              })
            );
            document.getElementById("signup")?.addEventListener("click", () =>
              auth0.loginWithRedirect({
                authorizationParams: { screen_hint: "signup", redirect_uri: window.location.origin + "/account" },
              })
            );
            return;
          }

          // Authenticated path
          const user = await withTimeout(auth0.getUser(), 5000).catch(() => ({}));
          const claims = await withTimeout(auth0.getIdTokenClaims(), 5000).catch(() => null);
          const token = claims?.__raw;
          if (token && claims?.exp) {
            try {
              document.cookie = `token=${token}; path=/; SameSite=Lax; ${window.location.protocol === "https:" ? "Secure;" : ""} expires=${new Date(claims.exp * 1000).toUTCString()}`;
            } catch {}
          }
          if (user?.email) {
            try { localStorage.setItem("customerEmail", user.email); } catch {}
          }

          const name = user?.given_name || user?.name || user?.email || "there";
          show(`
            <p class="mb-6">Hello, <span class="text-red-500">${name}</span></p>
            <a href="/customerdashboard/customerProfile" class="underline">My Account →</a>
          `);
        } catch (err) {
          // Hard fail fallback — offer login/signup instead of hanging
          show(`
            <h1 class="text-2xl mb-4 font-borg text-primary">Account</h1>
            <p class="mb-4">We couldn’t load your account. ${err?.message === 'timeout' ? 'Request timed out.' : 'Please try again.'}</p>
            ${buttonGroup}
          `);
          // Bind buttons after error render
          const auth0 = await getAuth0Client().catch(() => null);
          document.getElementById("login")?.addEventListener("click", () =>
            auth0?.loginWithRedirect?.({ authorizationParams: { screen_hint: "login", redirect_uri: window.location.origin + "/account" } })
          );
          document.getElementById("signup")?.addEventListener("click", () =>
            auth0?.loginWithRedirect?.({ authorizationParams: { screen_hint: "signup", redirect_uri: window.location.origin + "/account" } })
          );
        }
      })();
    </script>
  </main>
</BaseLayout>