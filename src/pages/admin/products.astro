---
import DashboardShell from '../../components/admin/DashboardShell.tsx'
import ProductTable from '../../components/admin/ProductTable.tsx'

const isDev = import.meta.env.DEV;
const requestOrigin = new URL(Astro.request.url).origin;
const siteOrigin = Astro.site ? new URL(Astro.site).origin : requestOrigin;
const envBase = import.meta.env.PUBLIC_BASE_URL;
const base = isDev ? requestOrigin : (envBase || siteOrigin);

let initial: any[] = [];
let _debug: any = { base, ok: false, status: 0, reason: '' };
try {
  const res = await fetch(`${base}/.netlify/functions/products-list`);
  _debug.status = res.status;
  if (res.ok) {
    const j = await res.json();
    initial = Array.isArray(j) ? j : (j?.data ?? []);
    _debug.ok = true;
    _debug.length = Array.isArray(initial) ? initial.length : 0;
  }
} catch (e: any) {
  _debug.reason = e?.message || String(e);
}
---
<DashboardShell client:only="react">
  <h1 class="text-2xl md:text-3xl font-bold mb-4">Products</h1>

  <div class="mb-4 flex items-center justify-between">
    <p class="text-white/70 text-sm">Manage products without opening Sanity.</p>
  </div>

  <ProductTable
    rows={initial}
    refresh={async () => {
      try {
        const res = await fetch('/.netlify/functions/products-list');
        if (res.ok) {
          const j = await res.json();
          return Array.isArray(j) ? j : (j?.data ?? []);
        }
      } catch (err) {
        console.error('Failed to refresh products', err);
      }
      return [];
    }}
  />
</DashboardShell>
