// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 21a79c897ec6fdec "landio (copy)", do not edit manually */
"use client";

/**
 * @typedef Locale
 * string
 */

/**
 * @typedef {{
 * children?: React.ReactNode
 * locale?: Locale
 * style?: React.CSSProperties
 * className?: string
 * id?: string
 * ref?: any
 * width?: any
 * height?: any
 * layoutId?: string
 * logo?: {src: string, srcSet?: string, alt?: string} // logo
}} Props

 */
import { routes } from "./chunks/chunk-YOD5Q24P.js";

// virtual:logo-box
import { Fragment as Fragment2 } from "react";
import { ContextProviders } from "unframer";
const FramerContextProviders = ContextProviders ?? (({ children }) => <>{children}</>);

// /:https://framerusercontent.com/modules/uZY6OM9BD4MfM8QvlZZl/QoLcvMqK9XZkAVB2lw9Y/NiUV28iph.js
import { jsx as _jsx } from "react/jsx-runtime";
import {
	addFonts,
	addPropertyControls,
	ControlType,
	cx,
	getLoadingLazyAtYPosition,
	Image,
	useActiveVariantCallback,
	useComponentViewport,
	useLocaleInfo,
	useVariantState,
	withCSS,
} from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
import { useRef } from "react";
var serializationHash = "framer-PrJGy";
var variantClassNames = {
	X3TFFHCCO: "framer-v-1kwgrva",
};
var transition1 = {
	bounce: 0.2,
	delay: 0,
	duration: 0.4,
	type: "spring",
};
var toResponsiveImage = (value) => {
	if (
		typeof value === "object" &&
		value !== null &&
		typeof value.src === "string"
	) {
		return value;
	}
	return typeof value === "string"
		? {
				src: value,
			}
		: void 0;
};
var Transition = ({ value, children }) => {
	const config = React.useContext(MotionConfigContext);
	const transition = value ?? config.transition;
	const contextValue = React.useMemo(
		() => ({
			...config,
			transition,
		}),
		[JSON.stringify(transition)],
	);
	return (
		<MotionConfigContext.Provider value={contextValue}>
			{children}
		</MotionConfigContext.Provider>
	);
};
var Variants = motion.create(React.Fragment);
var getProps = ({ height, id, logo, width, ...props }) => {
	return {
		...props,
		qBkMUnNuR: logo ??
			props.qBkMUnNuR ?? {
				alt: "FAS Logo",
				pixelHeight: 150,
				pixelWidth: 150,
				src: "https://framerusercontent.com/images/FRoB01pgxTl5IhYnx6DZCGYQyk.png?width=150&height=150",
			},
	};
};
var createLayoutDependency = (props, variants) => {
	if (props.layoutDependency)
		return variants.join("-") + props.layoutDependency;
	return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
	const fallbackRef = useRef(null);
	const refBinding = ref ?? fallbackRef;
	const defaultLayoutId = React.useId();
	const { activeLocale, setLocale } = useLocaleInfo();
	const componentViewport = useComponentViewport();
	const { style, className, layoutId, variant, qBkMUnNuR, ...restProps } =
		getProps(props);
	const {
		baseVariant,
		classNames,
		clearLoadingGesture,
		gestureHandlers,
		gestureVariant,
		isLoading,
		setGestureState,
		setVariant,
		variants,
	} = useVariantState({
		defaultVariant: "X3TFFHCCO",
		ref: refBinding,
		variant,
		variantClassNames,
	});
	const layoutDependency = createLayoutDependency(props, variants);
	const { activeVariantCallback, delay } =
		useActiveVariantCallback(baseVariant);
	const onTap12cwbu6 = activeVariantCallback(async (...args) => {
		setVariant("X3TFFHCCO");
	});
	const sharedStyleClassNames = [];
	const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
	return (
		<LayoutGroup id={layoutId ?? defaultLayoutId}>
			<Variants animate={variants} initial={false}>
				<Transition value={transition1}>
					<motion.div
						{...restProps}
						{...gestureHandlers}
						className={cx(
							scopingClassNames,
							"framer-1kwgrva",
							className,
							classNames,
						)}
						data-border={true}
						data-framer-name={"primary"}
						layoutDependency={layoutDependency}
						layoutId={"X3TFFHCCO"}
						ref={refBinding}
						style={{
							"--border-bottom-width": "1px",
							"--border-color": "rgb(34, 34, 34)",
							"--border-left-width": "1px",
							"--border-right-width": "1px",
							"--border-style": "solid",
							"--border-top-width": "1px",
							backgroundColor: "rgb(0, 0, 0)",
							borderBottomLeftRadius: 16,
							borderBottomRightRadius: 16,
							borderTopLeftRadius: 16,
							borderTopRightRadius: 16,
							boxShadow:
								"0px 0.7065919983928324px 0.7065919983928324px -0.6666666666666666px rgba(92, 92, 92, 0.21), 0px 1.8065619053231785px 1.8065619053231785px -1.3333333333333333px rgba(92, 92, 92, 0.21), 0px 3.6217592146567767px 3.6217592146567767px -2px rgba(92, 92, 92, 0.2), 0px 6.8655999097303715px 6.8655999097303715px -2.6666666666666665px rgba(92, 92, 92, 0.18), 0px 13.646761411524492px 13.646761411524492px -3.3333333333333335px rgba(92, 92, 92, 0.14), 0px 30px 30px -4px rgba(92, 92, 92, 0.05)",
							...style,
						}}
					>
						<motion.div
							className={"framer-1j6fkt8"}
							data-framer-name={"Container"}
							layoutDependency={layoutDependency}
							layoutId={"LPJVWw2rC"}
							style={{
								backgroundColor: "rgb(15, 15, 15)",
								borderBottomLeftRadius: 10,
								borderBottomRightRadius: 10,
								borderTopLeftRadius: 10,
								borderTopRightRadius: 10,
								boxShadow:
									"0px 0.7961918735236395px 0.7961918735236395px -0.875px rgba(107, 107, 107, 0.29), 0px 2.414506143104518px 2.414506143104518px -1.75px rgba(107, 107, 107, 0.27), 0px 6.382653521484461px 6.382653521484461px -2.625px rgba(107, 107, 107, 0.24), 0px 20px 20px -3.5px rgba(107, 107, 107, 0.13)",
							}}
						>
							<Image
								background={{
									alt: "FAS Logo",
									fit: "fit",
									intrinsicHeight: 40,
									intrinsicWidth: 44,
									loading: getLoadingLazyAtYPosition(
										(componentViewport?.y || 0) +
											(10 +
												((componentViewport?.height || 96) -
													20 -
													((componentViewport?.height || 96) - 20) * 1) /
													2) +
											(16 +
												(((componentViewport?.height || 96) - 20) * 1 -
													32 -
													(((componentViewport?.height || 96) - 20) * 1 - 32) *
														1) /
													2),
									),
									pixelHeight: 150,
									pixelWidth: 150,
									sizes: `max(max(${componentViewport?.width || "100vw"} - 20px, 1px) - 32px, 1px)`,
									...toResponsiveImage(qBkMUnNuR),
									...{
										positionX: "center",
										positionY: "center",
									},
								}}
								className={"framer-qtoqks"}
								data-framer-name={"Icon"}
								data-highlight={true}
								layoutDependency={layoutDependency}
								layoutId={"lto6vAFIN"}
								onTap={onTap12cwbu6}
							/>
						</motion.div>
					</motion.div>
				</Transition>
			</Variants>
		</LayoutGroup>
	);
});
var css = [
	"@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
	".framer-PrJGy.framer-1f77nla, .framer-PrJGy .framer-1f77nla { display: block; }",
	".framer-PrJGy.framer-1kwgrva { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: 96px; justify-content: center; overflow: visible; padding: 10px; position: relative; width: 96px; }",
	".framer-PrJGy .framer-1j6fkt8 { align-content: center; align-items: center; display: flex; flex: 1 0 0px; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: 100%; justify-content: center; overflow: visible; padding: 16px; position: relative; width: 1px; }",
	".framer-PrJGy .framer-qtoqks { cursor: pointer; flex: 1 0 0px; height: 100%; overflow: visible; position: relative; width: 1px; }",
	'.framer-PrJGy[data-border="true"]::after, .framer-PrJGy [data-border="true"]::after { content: ""; border-width: var(--border-top-width, 0) var(--border-right-width, 0) var(--border-bottom-width, 0) var(--border-left-width, 0); border-color: var(--border-color, none); border-style: var(--border-style, none); width: 100%; height: 100%; position: absolute; box-sizing: border-box; left: 0; top: 0; border-radius: inherit; pointer-events: none; }',
];
var FramerNiUV28iph = withCSS(Component, css, "framer-PrJGy");
var stdin_default = FramerNiUV28iph;
FramerNiUV28iph.displayName = "Logo box";
FramerNiUV28iph.defaultProps = {
	height: 96,
	width: 96,
};
addPropertyControls(FramerNiUV28iph, {
	qBkMUnNuR: {
		__defaultAssetReference:
			"data:framer/asset-reference,FRoB01pgxTl5IhYnx6DZCGYQyk.png?originalFilename=faslogo150.png&width=150&height=150",
		__vekterDefault: {
			alt: "FAS Logo",
			assetReference:
				"data:framer/asset-reference,FRoB01pgxTl5IhYnx6DZCGYQyk.png?originalFilename=faslogo150.png&width=150&height=150",
		},
		description: "",
		title: "logo",
		type: ControlType.ResponsiveImage,
	},
});
addFonts(
	FramerNiUV28iph,
	[
		{
			explicitInter: true,
			fonts: [],
		},
	],
	{
		supportsExplicitInterCodegen: true,
	},
);

// virtual:logo-box
import { WithFramerBreakpoints } from "unframer";
import { jsx } from "react/jsx-runtime";
var locales = [];
var defaultResponsiveVariants = {};
/** @type {function(Props): any} */
function ComponentWithRoot({ locale, ...rest }) {
	return (
		<FramerContextProviders
			routes={routes}
			framerSiteId={
				"21a79c897ec6fdecc33a23f68d80f3e3f699d3e22efca4618d9f9fe12404d644"
			}
			locale={locale}
			locales={locales}
		>
			{jsx(stdin_default, {
				...rest,
			})}
		</FramerContextProviders>
	);
}
/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */

/**
 * Renders LogoBoxFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({ locale = "", ...rest }) => {
	return (
		<FramerContextProviders
			routes={routes}
			framerSiteId={
				"21a79c897ec6fdecc33a23f68d80f3e3f699d3e22efca4618d9f9fe12404d644"
			}
			locale={locale}
			locales={locales}
		>
			<WithFramerBreakpoints
				Component={stdin_default}
				variants={defaultResponsiveVariants}
				{...rest}
			/>
		</FramerContextProviders>
	);
};
Object.assign(ComponentWithRoot, stdin_default);
var logo_box_default = ComponentWithRoot;
export { logo_box_default as default };
