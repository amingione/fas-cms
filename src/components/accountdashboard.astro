<script>
  import Clerk, { Clerk as ClerkType } from '@clerk/clerk-js';

  export {};

declare global {
  interface Window {
    Clerk: ClerkType;
  }
}
window.addEventListener('DOMContentLoaded', async () => {
  if (window.Clerk?.load) {
    await window.Clerk.load();
  }
});

  window.addEventListener('DOMContentLoaded', async () => {
    const closeBtn = document.getElementById('closeAccountDashboard');
    const dashboardNav = document.getElementById('dashboardNav');
    const overlay = document.getElementById('accountDashboardOverlay');
    const sanityToken = import.meta.env.SANITY_API_TOKEN;
    const sanityProjectId = import.meta.env.SANITY_PROJECT_ID;

    if (!dashboardNav) {
      console.warn("‚ö†Ô∏è No dashboardNav element found.");
      return;
    }

    async function fetchCustomerData(email) {
      try {
        const customerQuery = encodeURIComponent(`*[_type == "customer" && email == "${email}"][0]`);
        const customerUrl = `https://${sanityProjectId}.api.sanity.io/v2023-05-30/data/query/production?query=${customerQuery}`;
        const response = await fetch(customerUrl, {
          headers: { Authorization: `Bearer ${sanityToken}` },
        });
        if (!response.ok) throw new Error("Failed to fetch customer data");
        const result = await response.json();
        return result.result;
      } catch (err) {
        console.error("üö® Failed to fetch customer data:", err);
        return null;
      }
    }

    async function loadDashboard() {
      const user = window.Clerk?.user;
      if (!user) {
        dashboardNav.innerHTML = `
          <div class="text-center space-y-4">
            <a href="/sign-in" class="text-primary underline text-xs">Login</a>
          </div>
        `;
        return;
      }

      const email = user.emailAddresses?.[0]?.emailAddress || '';

      try {
        const customer = await fetchCustomerData(email);
        dashboardNav.innerHTML = `
          <div class="space-y-4 p-4">
            <h3 class="text-xs text-white/50 uppercase">Welcome, ${email}</h3>
            <a href="/account/orders" class="text-primary hover:underline text-xs">View Orders</a>
            <a href="/account/quotes" class="text-primary hover:underline text-xs">View Quotes</a>
            <button id="logoutBtn" class="mt-4 text-red-500 hover:text-white text-sm w-full">Logout</button>
          </div>
        `;

        const logoutBtn = document.getElementById('logoutBtn');
        logoutBtn?.addEventListener('click', async () => {
          await window.Clerk?.signOut();
          window.location.href = '/';
        });
      } catch (err) {
        console.error("üö® Error loading dashboard:", err);
        dashboardNav.innerHTML = `<p class="text-red-500 text-xs">Failed to load dashboard</p>`;
      }
    }

    if (window.Clerk) {
      const tryLoadDashboard = () => {
        const user = window.Clerk?.user;
        if (user) {
          loadDashboard();
        }
      };

      if (window.Clerk.loaded) {
        tryLoadDashboard();
      } else {
        window.addEventListener('clerk:loaded', tryLoadDashboard);
      }

      if (!window.Clerk?.frontendApi || window.Clerk.frontendApi !== import.meta.env.PUBLIC_CLERK_FRONTEND_API) {
        console.warn("‚ö†Ô∏è Clerk frontend API mismatch or not initialized. Forcing reload...");
        const script = document.createElement("script");
        script.setAttribute("data-clerk-publishable-key", import.meta.env.VITE_CLERK_PUBLISHABLE_KEY);
        script.setAttribute("data-clerk-frontend-api", import.meta.env.PUBLIC_CLERK_FRONTEND_API);
        script.src = `https://${import.meta.env.PUBLIC_CLERK_FRONTEND_API}/npm/@clerk/clerk-js@latest/dist/clerk.browser.js`;
        script.async = true;
        document.body.appendChild(script);
      }
      
    } else {
      console.error('üö® Clerk not initialized.');
    }

    closeBtn?.addEventListener('click', () => {
      document.getElementById('accountDashboard')?.classList.add('translate-x-full');
      overlay?.classList.add('hidden');
    });
  });
</script>

<!-- ‚úÖ Sidebar structure clean -->
<div id="accountDashboardOverlay" class="fixed inset-0 z-40 hidden bg-black/70 transition-opacity duration-300 ease-in-out">
  <div id="accountDashboard" class="fixed right-0 top-0 h-full w-80 bg-black shadow-xl transform transition-all duration-500 ease-in-out translate-x-full">
    
    <div id="dashboardNav" class="p-4 space-y-6 text-white">
      <!-- JS will inject dashboard here -->
    </div>

    <button id="closeAccountDashboard" class="absolute top-2 right-2 text-white text-2xl">&times;</button>

  </div>
</div>