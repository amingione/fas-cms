---
/**
 * ProductCardLite.astro — demo-store tile (badge chips, centered product)
 */

import Label from '@/components/storefront/label.tsx';

interface ImgAsset { url?: string }
interface Img { asset?: ImgAsset; alt?: string }
interface Slug { current?: string }
const { product, productImage, layout = 'grid' } = Astro.props as {
  product: {
    _id: string
    title?: string
    slug?: Slug | string
    price?: number
    images?: Img[]
    shortDescription?: string
    description?: string
  }
  productImage?: Img
  layout?: 'grid' | 'list'
}

const slug = typeof product?.slug === 'string' ? product.slug : (product?.slug?.current || '')
const href = slug ? `/shop/${encodeURIComponent(slug)}` : '#'
const img = productImage?.asset?.url || product?.images?.[0]?.asset?.url || '/placeholder.png'
const title = product?.title || 'Untitled Product'
const short = (product as any)?.shortDescription || (product as any)?.excerpt || (product as any)?.description || ''
const shortText = typeof short === 'string' ? short : ''
const price = typeof product?.price === 'number'
  ? product.price
  : undefined
---
{layout === 'list' ? (
  <a href={href}
     class="group block rounded-sm border border-white/10 bg-black/20 transition-shadow duration-300 hover:shadow-xl focus:outline-none focus:ring-2 focus:ring-primary/60 md:flex md:items-stretch">
    <!-- Image left -->
    <div class="relative bg-black/30 backdrop-blur-sm md:w-56 md:min-w-56 md:max-w-56 aspect-square md:aspect-auto flex items-center justify-center">
      <img src={img} alt={title}
           class="max-h-[80%] max-w-[88%] object-contain transition-transform duration-300 ease-out group-hover:scale-[1.03]" />
    </div>
    <!-- Content right -->
    <div class="flex-1 px-4 py-4 text-left">
      <div class="text-white font-ethno text-[1rem] leading-snug line-clamp-2">{title}</div>
      {shortText && (
        <div class="mt-2 text-white/70 text-sm leading-relaxed line-clamp-2">{shortText}</div>
      )}
      <div class="mt-3 text-accent font-captain text-[1.15rem]">
        {typeof product?.price === 'number' ? `$${product.price.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}` : '—'}
      </div>
    </div>
  </a>
) : (
  <a href={href}
     class="group block racing-stripe relative overflow-hidden rounded-sm border border-white/10 bg-black/20 transition-shadow duration-300 hover:shadow-xl focus:outline-none focus:ring-2 focus:ring-primary/60">
    <!-- Image area: square, centered product, no cropping -->
    <div class="relative aspect-square object-contain contain flex pb-10 justify-center bg-black/30 backdrop-blur-sm">
      <img src={img} alt={title}
           class="max-h-[78%] max-w-[88%] object-contain transition-transform duration-300 ease-out group-hover:scale-[1.03]" />
    </div>
    <div class="absolute w-full bottom-4 flex items-center gap-1">
      <!-- Bottom label (title + price) -->
      <Label title={title} amount={typeof product?.price === 'number' ? product.price : 0} position="bottom" />
    </div>
  </a>
)}
