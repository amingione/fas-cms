// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 891ff71faa342f0a "Polo (copy)", do not edit manually */
'use client';

/**
 * @typedef Locale
 * string
 */

/**
 * @typedef {{
 * children?: React.ReactNode
 * locale?: Locale
 * style?: React.CSSProperties
 * className?: string
 * id?: string
 * ref?: any
 * width?: any
 * height?: any
 * layoutId?: string
 * icon?: undefined // Icon
 * text?: string // text
}} Props

 */
import { className, css, fonts } from './chunks/chunk-EITFHPVU.js';
import { routes } from './chunks/chunk-23HYNGZD.js';

// virtual:small-card
import { Fragment as Fragment2 } from 'react';
import { ContextProviders } from 'unframer';
const FramerContextProviders = ContextProviders ?? (({ children }) => <>{children}</>);

// /:https://framerusercontent.com/modules/tIWwJ9y8fCxcFYmVq65q/K5HkfucTt42dn7Ng445i/bLe3VcUET.js
import { jsx as _jsx2, jsxs as _jsxs } from 'react/jsx-runtime';
import {
  addFonts,
  addPropertyControls as addPropertyControls2,
  ControlType as ControlType2,
  cx as cx2,
  getFontsFromSharedStyle,
  Instance,
  RichText,
  useComponentViewport,
  useLocaleInfo,
  useVariantState,
  withCSS as withCSS2,
  withFX
} from 'unframer';
import { LayoutGroup, motion as motion2, MotionConfigContext } from 'unframer';
import * as React2 from 'react';
import { useRef } from 'react';

// /:https://framerusercontent.com/modules/gCT1FxkIShieNRaI1qxS/74veshalZQjlFwCKXPut/vroEWIXdf.js
import { jsx as _jsx } from 'react/jsx-runtime';
import { addPropertyControls, ControlType, cx, motion, useSVGTemplate, withCSS } from 'unframer';
import * as React from 'react';
import { forwardRef as forwardRef2 } from 'react';
var mask = 'var(--framer-icon-mask)';
var Base = /* @__PURE__ */ forwardRef2(function (props, ref) {
  return (
    <svg {...props} ref={ref}>
      {props.children}
    </svg>
  );
});
var MotionSVG = motion.create(Base);
var SVG = /* @__PURE__ */ forwardRef2((props, ref) => {
  const { animated, layoutId, children, ...rest } = props;
  return animated ? (
    <MotionSVG {...rest} layoutId={layoutId} ref={ref}>
      {children}
    </MotionSVG>
  ) : (
    <svg {...rest} ref={ref}>
      {children}
    </svg>
  );
});
var svg =
  '<svg display="block" role="presentation" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M 3 0 L 12 9 L 3 18 L 3 13.5 L 0 13.5 L 0 4.5 L 3 4.5 Z" fill-opacity="var(--1m6trwb, 0)" fill="var(--21h8s6, rgb(0, 0, 0))" height="18px" id="G0N_2C8Sb" transform="translate(9.75 3)" width="12px"/><path d="M 3 0 L 12 9 L 3 18 L 3 13.5 L 0 13.5 L 0 4.5 L 3 4.5 Z" fill="transparent" height="18px" id="hi8uqjsNY" stroke-dasharray="" stroke-linecap="round" stroke-linejoin="round" stroke-width="var(--pgex8v, 1.5)" stroke="var(--21h8s6, rgb(0, 0, 0))" transform="translate(9.75 3)" width="12px"/><path d="M 0 9 L 0 0" fill="transparent" height="9px" id="CEhIva1N_" stroke-dasharray="" stroke-linecap="round" stroke-linejoin="round" stroke-width="var(--pgex8v, 1.5)" stroke="var(--21h8s6, rgb(0, 0, 0))" transform="translate(3.75 7.5)" width="1px"/><path d="M 0 9 L 0 0" fill="transparent" height="9px" id="BmZjb0_uf" stroke-dasharray="" stroke-linecap="round" stroke-linejoin="round" stroke-width="var(--pgex8v, 1.5)" stroke="var(--21h8s6, rgb(0, 0, 0))" transform="translate(6.75 7.5)" width="1px"/></svg>';
var getProps = ({ alpha, color, height, id, width, width1, ...props }) => {
  return {
    ...props,
    ezTt3ayMo: color ?? props.ezTt3ayMo ?? 'rgb(0, 0, 0)',
    lschgej4H: width1 ?? props.lschgej4H ?? 1.5,
    qxTvv_EBh: alpha ?? props.qxTvv_EBh
  };
};
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
  const {
    style,
    className: className2,
    layoutId,
    variant,
    ezTt3ayMo,
    lschgej4H,
    qxTvv_EBh,
    ...restProps
  } = getProps(props);
  const href = useSVGTemplate('808023201', svg);
  return (
    <SVG
      {...restProps}
      className={cx('framer-EFgXj', className2)}
      layoutId={layoutId}
      ref={ref}
      role={'presentation'}
      style={{
        '--1m6trwb': qxTvv_EBh,
        '--21h8s6': ezTt3ayMo,
        '--pgex8v': lschgej4H,
        ...style
      }}
      viewBox={'0 0 24 24'}
    >
      <use href={href} />
    </SVG>
  );
});
var css2 = [
  `.framer-EFgXj { -webkit-mask: ${mask}; aspect-ratio: 1; display: block; mask: ${mask}; width: 24px; }`
];
var Icon = withCSS(Component, css2, 'framer-EFgXj');
Icon.displayName = 'Arrow Fat Lines Right';
var stdin_default = Icon;
addPropertyControls(Icon, {
  ezTt3ayMo: {
    defaultValue: 'rgb(0, 0, 0)',
    hidden: false,
    title: 'Color',
    type: ControlType.Color
  },
  lschgej4H: {
    defaultValue: 1.5,
    displayStepper: true,
    hidden: false,
    max: 6,
    min: 0,
    step: 0.5,
    title: 'Width',
    type: ControlType.Number
  },
  qxTvv_EBh: {
    defaultValue: 0,
    displayStepper: true,
    hidden: false,
    max: 1,
    min: 0,
    step: 0.1,
    title: 'Alpha',
    type: ControlType.Number
  }
});

// /:https://framerusercontent.com/modules/tIWwJ9y8fCxcFYmVq65q/K5HkfucTt42dn7Ng445i/bLe3VcUET.js
var MotionDivWithFX = withFX(motion2.div);
var serializationHash = 'framer-iclTs';
var variantClassNames = {
  Ya4q77oS0: 'framer-v-eygmpz'
};
var animation = {
  opacity: 0,
  rotate: 0,
  rotateX: 0,
  rotateY: 0,
  scale: 1,
  skewX: 0,
  skewY: 0,
  x: -50,
  y: 0
};
var transition1 = {
  damping: 25,
  delay: 0.45,
  mass: 1,
  stiffness: 127,
  type: 'spring'
};
var animation1 = {
  opacity: 0,
  rotate: 0,
  rotateX: 0,
  rotateY: 0,
  scale: 1,
  skewX: 0,
  skewY: 0,
  transition: transition1,
  x: -50,
  y: 0
};
var transition2 = {
  bounce: 0.2,
  delay: 0,
  duration: 0.4,
  type: 'spring'
};
var Transition = ({ value, children }) => {
  const config = React2.useContext(MotionConfigContext);
  const transition = value ?? config.transition;
  const contextValue = React2.useMemo(
    () => ({
      ...config,
      transition
    }),
    [JSON.stringify(transition)]
  );
  return (
    <MotionConfigContext.Provider value={contextValue}>{children}</MotionConfigContext.Provider>
  );
};
var Variants = motion2.create(React2.Fragment);
var getProps2 = ({ height, icon, id, text, width, ...props }) => {
  return {
    ...props,
    D9G1UslsE: text ?? props.D9G1UslsE ?? 'Premier Performance',
    nSEMkmct9: icon ?? props.nSEMkmct9 ?? stdin_default
  };
};
var createLayoutDependency = (props, variants) => {
  if (props.layoutDependency) return variants.join('-') + props.layoutDependency;
  return variants.join('-');
};
var Component2 = /* @__PURE__ */ React2.forwardRef(function (props, ref) {
  const fallbackRef = useRef(null);
  const refBinding = ref ?? fallbackRef;
  const defaultLayoutId = React2.useId();
  const { activeLocale, setLocale } = useLocaleInfo();
  const componentViewport = useComponentViewport();
  const {
    style,
    className: className2,
    layoutId,
    variant,
    nSEMkmct9,
    D9G1UslsE,
    ...restProps
  } = getProps2(props);
  const {
    baseVariant,
    classNames,
    clearLoadingGesture,
    gestureHandlers,
    gestureVariant,
    isLoading,
    setGestureState,
    setVariant,
    variants
  } = useVariantState({
    defaultVariant: 'Ya4q77oS0',
    ref: refBinding,
    variant,
    variantClassNames
  });
  const layoutDependency = createLayoutDependency(props, variants);
  const sharedStyleClassNames = [className];
  const scopingClassNames = cx2(serializationHash, ...sharedStyleClassNames);
  return (
    <LayoutGroup id={layoutId ?? defaultLayoutId}>
      <Variants animate={variants} initial={false}>
        <Transition value={transition2}>
          <MotionDivWithFX
            {...restProps}
            {...gestureHandlers}
            __framer__animate={{
              transition: transition1
            }}
            __framer__animateOnce={true}
            __framer__enter={animation}
            __framer__exit={animation1}
            __framer__styleAppearEffectEnabled={true}
            __framer__threshold={0}
            __perspectiveFX={false}
            __smartComponentFX={true}
            __targetOpacity={1}
            className={cx2(scopingClassNames, 'framer-eygmpz', className2, classNames)}
            data-framer-name={'Primary'}
            layoutDependency={layoutDependency}
            layoutId={'Ya4q77oS0'}
            ref={refBinding}
            style={{
              backgroundColor: 'var(--token-cba3b9c8-9e49-437e-aca1-1e69db3088dc, rgb(17, 17, 17))',
              borderBottomLeftRadius: 78,
              borderBottomRightRadius: 78,
              borderTopLeftRadius: 78,
              borderTopRightRadius: 78,
              ...style
            }}
          >
            <Instance
              animated={true}
              className={'framer-1ir2ivd'}
              Component={nSEMkmct9}
              layoutDependency={layoutDependency}
              layoutId={'x81K7ufJk'}
              style={{
                '--1m6trwb': 0.2,
                '--21h8s6': 'var(--token-7a7ce709-7970-4e23-97d8-1ae0355d02f0, rgb(255, 255, 255))',
                '--pgex8v': 1.5
              }}
            />
            <RichText
              __fromCanvasComponent={true}
              className={'framer-av4puv'}
              fonts={['Inter']}
              layoutDependency={layoutDependency}
              layoutId={'LQ1dhYa6h'}
              style={{
                '--framer-link-text-color': 'rgb(0, 153, 255)',
                '--framer-link-text-decoration': 'underline'
              }}
              text={D9G1UslsE}
              verticalAlignment={'top'}
              withExternalLayout={true}
            >
              <React2.Fragment>
                <motion2.p
                  className={'framer-styles-preset-wu4ebp'}
                  data-styles-preset={'H1YXoF4HR'}
                >
                  {'Video & Motion Graphics'}
                </motion2.p>
              </React2.Fragment>
            </RichText>
          </MotionDivWithFX>
        </Transition>
      </Variants>
    </LayoutGroup>
  );
});
var css3 = [
  '@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }',
  '.framer-iclTs.framer-y37q31, .framer-iclTs .framer-y37q31 { display: block; }',
  '.framer-iclTs.framer-eygmpz { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; overflow: hidden; padding: 12px 16px 12px 16px; position: relative; width: min-content; will-change: var(--framer-will-change-override, transform); }',
  '.framer-iclTs .framer-1ir2ivd { flex: none; height: var(--framer-aspect-ratio-supported, 20px); position: relative; width: 20px; }',
  '.framer-iclTs .framer-av4puv { flex: none; height: auto; position: relative; white-space: pre; width: auto; }',
  ...css
];
var FramerbLe3VcUET = withCSS2(Component2, css3, 'framer-iclTs');
var stdin_default2 = FramerbLe3VcUET;
FramerbLe3VcUET.displayName = 'small card';
FramerbLe3VcUET.defaultProps = {
  height: 56,
  width: 250
};
addPropertyControls2(FramerbLe3VcUET, {
  nSEMkmct9: {
    defaultValue: {
      identifier: 'module:gCT1FxkIShieNRaI1qxS/74veshalZQjlFwCKXPut/vroEWIXdf.js:default',
      moduleId: 'gCT1FxkIShieNRaI1qxS'
    },
    setModuleId: 'omX0gWFPqDwhaiWwf6ab',
    title: 'Icon',
    type: ControlType2.VectorSetItem
  },
  D9G1UslsE: {
    defaultValue: 'Premier Performance',
    displayTextArea: false,
    title: 'text',
    type: ControlType2.String
  }
});
addFonts(
  FramerbLe3VcUET,
  [
    {
      explicitInter: true,
      fonts: [
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange: 'U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F',
          url: 'https://framerusercontent.com/assets/5vvr9Vy74if2I6bQbJvbw7SY1pQ.woff2',
          weight: '400'
        },
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange: 'U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116',
          url: 'https://framerusercontent.com/assets/EOr0mi4hNtlgWNn9if640EZzXCo.woff2',
          weight: '400'
        },
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange: 'U+1F00-1FFF',
          url: 'https://framerusercontent.com/assets/Y9k9QrlZAqio88Klkmbd8VoMQc.woff2',
          weight: '400'
        },
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange: 'U+0370-03FF',
          url: 'https://framerusercontent.com/assets/OYrD2tBIBPvoJXiIHnLoOXnY9M.woff2',
          weight: '400'
        },
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange:
            'U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF',
          url: 'https://framerusercontent.com/assets/JeYwfuaPfZHQhEG8U5gtPDZ7WQ.woff2',
          weight: '400'
        },
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange:
            'U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2070, U+2074-207E, U+2080-208E, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD',
          url: 'https://framerusercontent.com/assets/GrgcKwrN6d3Uz8EwcLHZxwEfC4.woff2',
          weight: '400'
        },
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange:
            'U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB',
          url: 'https://framerusercontent.com/assets/b6Y37FthZeALduNqHicBT6FutY.woff2',
          weight: '400'
        }
      ]
    },
    ...getFontsFromSharedStyle(fonts)
  ],
  {
    supportsExplicitInterCodegen: true
  }
);

// virtual:small-card
import { WithFramerBreakpoints } from 'unframer';
import { jsx } from 'react/jsx-runtime';
var locales = [];
var defaultResponsiveVariants = {};
/** @type {function(Props): any} */
function ComponentWithRoot({ locale, ...rest }) {
  return (
    <FramerContextProviders
      routes={routes}
      framerSiteId={'891ff71faa342f0af7ef20f0583083bbec16fee0069f0ca5cfd3ff66fcf3cd1f'}
      locale={locale}
      locales={locales}
    >
      {jsx(stdin_default2, {
        ...rest
      })}
    </FramerContextProviders>
  );
}
/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */

/**
 * Renders SmallCardFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({ locale = '', ...rest }) => {
  return (
    <FramerContextProviders
      routes={routes}
      framerSiteId={'891ff71faa342f0af7ef20f0583083bbec16fee0069f0ca5cfd3ff66fcf3cd1f'}
      locale={locale}
      locales={locales}
    >
      <WithFramerBreakpoints
        Component={stdin_default2}
        variants={defaultResponsiveVariants}
        {...rest}
      />
    </FramerContextProviders>
  );
};
Object.assign(ComponentWithRoot, stdin_default2);
var small_card_default = ComponentWithRoot;
export { small_card_default as default };
