// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 891ff71faa342f0a "Polo (copy)", do not edit manually */
'use client';

/**
 * @typedef Locale
 * string
 */

/**
 * @typedef {{
 * children?: React.ReactNode
 * locale?: Locale
 * style?: React.CSSProperties
 * className?: string
 * id?: string
 * ref?: any
 * width?: any
 * height?: any
 * layoutId?: string
 * title?: string // Title
 * link?: string // Link
 * newTab?: boolean // New Tab
}} Props

 */
import { stdin_default } from './chunks/chunk-JOLREB4L.js';
import './chunks/chunk-OVUOJGQZ.js';
import { routes } from './chunks/chunk-23HYNGZD.js';

// virtual:call-button
import { Fragment } from 'react';
import { ContextProviders } from 'unframer';
const FramerContextProviders = ContextProviders ?? (({ children }) => <>{children}</>);
import { WithFramerBreakpoints } from 'unframer';
import { jsx } from 'react/jsx-runtime';
var locales = [];
var defaultResponsiveVariants = {};
/** @type {function(Props): any} */
function ComponentWithRoot({ locale, ...rest }) {
  return (
    <FramerContextProviders
      routes={routes}
      framerSiteId={'891ff71faa342f0af7ef20f0583083bbec16fee0069f0ca5cfd3ff66fcf3cd1f'}
      locale={locale}
      locales={locales}
    >
      {jsx(stdin_default, {
        ...rest
      })}
    </FramerContextProviders>
  );
}
/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */

/**
 * Renders CallButtonFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({ locale = '', ...rest }) => {
  return (
    <FramerContextProviders
      routes={routes}
      framerSiteId={'891ff71faa342f0af7ef20f0583083bbec16fee0069f0ca5cfd3ff66fcf3cd1f'}
      locale={locale}
      locales={locales}
    >
      <WithFramerBreakpoints
        Component={stdin_default}
        variants={defaultResponsiveVariants}
        {...rest}
      />
    </FramerContextProviders>
  );
};
Object.assign(ComponentWithRoot, stdin_default);
var call_button_default = ComponentWithRoot;
export { call_button_default as default };
