// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 891ff71faa342f0a "Polo (copy)", do not edit manually */
// /:https://framerusercontent.com/modules/qFXfgkxfqYgX4RX8PHmn/AP618Eos8eum2bkcrh2l/rating.js
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { addPropertyControls, ControlType } from "unframer";
function StarRating(props) {
  const { rating, starColor, filledColor, starSize, textSize, textWeight, textColor, style } = props;
  const formattedRating = Number.isInteger(rating) ? `${rating}.0` : rating.toFixed(1);
  const renderStar = (index) => {
    if (rating >= index + 1) {
      return /* @__PURE__ */ _jsx("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 24 24", fill: filledColor, width: `${starSize}px`, height: `${starSize}px`, children: /* @__PURE__ */ _jsx("path", { d: "M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z" }) }, index);
    } else if (rating > index && rating < index + 1) {
      return /* @__PURE__ */ _jsxs("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 24 24", width: `${starSize}px`, height: `${starSize}px`, children: [/* @__PURE__ */ _jsx("defs", { children: /* @__PURE__ */ _jsxs("linearGradient", { id: `half-fill-${index}`, children: [/* @__PURE__ */ _jsx("stop", { offset: "50%", stopColor: filledColor }), /* @__PURE__ */ _jsx("stop", { offset: "50%", stopColor: starColor })] }) }), /* @__PURE__ */ _jsx("path", { fill: `url(#half-fill-${index})`, d: "M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z" })] }, index);
    } else {
      return /* @__PURE__ */ _jsx("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 24 24", fill: starColor, width: `${starSize}px`, height: `${starSize}px`, children: /* @__PURE__ */ _jsx("path", { d: "M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z" }) }, index);
    }
  };
  return /* @__PURE__ */ _jsxs("div", { style: { ...style, display: "flex", alignItems: "center", gap: "8px" }, children: [/* @__PURE__ */ _jsx("div", { style: { fontSize: `${textSize}px`, fontWeight: textWeight, color: textColor }, children: formattedRating }), /* @__PURE__ */ _jsx("div", { style: { display: "flex", gap: "4px" }, children: Array.from({ length: 5 }, (_, index) => renderStar(index)) })] });
}
StarRating.displayName = "Star Rating";
addPropertyControls(StarRating, { rating: { type: ControlType.Number, defaultValue: 3, min: 0, max: 5, step: 0.1, displayStepper: true, title: "Rating" }, starColor: { type: ControlType.Color, defaultValue: "#d3d3d3", title: "Star Color" }, filledColor: { type: ControlType.Color, defaultValue: "#FFD700", title: "Filled Color" }, starSize: { type: ControlType.Number, defaultValue: 24, min: 12, max: 64, step: 1, unit: "px", title: "Star Size" }, textSize: { type: ControlType.Number, defaultValue: 16, min: 10, max: 64, step: 1, unit: "px", title: "Text Size" }, textWeight: { type: ControlType.Number, defaultValue: 400, min: 100, max: 900, step: 100, title: "Text Weight" }, textColor: { type: ControlType.Color, defaultValue: "#000000", title: "Text Color" } });

export {
  StarRating
};
