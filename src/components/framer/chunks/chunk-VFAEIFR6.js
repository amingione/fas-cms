// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 891ff71faa342f0a "Polo (copy)", do not edit manually */
// /:https://framerusercontent.com/modules/n2V0kiDN3aDsBQxngjTD/m7Z1VBcKiGBOdRLfx1Hw/GGTji9ljP.js
import { jsx as _jsx2, jsxs as _jsxs2 } from "react/jsx-runtime";
import { addFonts as addFonts2, addPropertyControls as addPropertyControls2, ComponentViewportProvider, ControlType as ControlType2, cx as cx2, getFonts, SmartComponentScopedContainer, useActiveVariantCallback as useActiveVariantCallback2, useComponentViewport as useComponentViewport2, useLocaleInfo as useLocaleInfo2, useVariantState as useVariantState2, withCSS as withCSS2 } from "unframer";
import { LayoutGroup as LayoutGroup2, motion as motion2, MotionConfigContext as MotionConfigContext2 } from "unframer";
import * as React2 from "react";
import { useRef as useRef2 } from "react";

// /:https://framerusercontent.com/modules/SdQIBRGCaSu95GgdTZmi/BPFJ8SqdLBeCTFmVjXce/rYRqmI1eP.js
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { addFonts, addPropertyControls, ControlType, cx, useActiveVariantCallback, useComponentViewport, useLocaleInfo, useVariantState, withCSS } from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
import { useRef } from "react";
var cycleOrder = ["fdpGvkEzL", "JTJwLfN5y"];
var serializationHash = "framer-hEL9t";
var variantClassNames = { fdpGvkEzL: "framer-v-u2tgai", JTJwLfN5y: "framer-v-1r3tigq" };
function addPropertyOverrides(overrides, ...variants) {
  const nextOverrides = {};
  variants?.forEach((variant) => variant && Object.assign(nextOverrides, overrides[variant]));
  return nextOverrides;
}
var transition1 = { damping: 20, delay: 0, mass: 1, stiffness: 300, type: "spring" };
var radiusForCorner = (value, cornerIndex) => {
  if (typeof value === "number" && Number.isFinite(value)) return Math.max(0, value) + "px";
  if (typeof value !== "string" || typeof cornerIndex !== "number") return void 0;
  const segments = value.split(" ");
  return segments[cornerIndex] || segments[cornerIndex - 2] || segments[0];
};
var Transition = ({ value, children }) => {
  const config = React.useContext(MotionConfigContext);
  const transition = value ?? config.transition;
  const contextValue = React.useMemo(() => ({ ...config, transition }), [JSON.stringify(transition)]);
  return /* @__PURE__ */ _jsx(MotionConfigContext.Provider, { value: contextValue, children });
};
var Variants = motion.create(React.Fragment);
var humanReadableVariantMap = { Close: "JTJwLfN5y", Hamburger: "fdpGvkEzL" };
var getProps = ({ height, id, radius, width, ...props }) => {
  return { ...props, d2WdKj7yR: radius ?? props.d2WdKj7yR, variant: humanReadableVariantMap[props.variant] ?? props.variant ?? "fdpGvkEzL" };
};
var createLayoutDependency = (props, variants) => {
  if (props.layoutDependency) return variants.join("-") + props.layoutDependency;
  return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function(props, ref) {
  const fallbackRef = useRef(null);
  const refBinding = ref ?? fallbackRef;
  const defaultLayoutId = React.useId();
  const { activeLocale, setLocale } = useLocaleInfo();
  const componentViewport = useComponentViewport();
  const { style, className, layoutId, variant, d2WdKj7yR, ...restProps } = getProps(props);
  const { baseVariant, classNames, clearLoadingGesture, gestureHandlers, gestureVariant, isLoading, setGestureState, setVariant, variants } = useVariantState({ cycleOrder, defaultVariant: "fdpGvkEzL", ref: refBinding, variant, variantClassNames });
  const layoutDependency = createLayoutDependency(props, variants);
  const { activeVariantCallback, delay } = useActiveVariantCallback(baseVariant);
  const onTapb36mnq = activeVariantCallback(async (...args) => {
    setGestureState({ isPressed: false });
    setVariant("JTJwLfN5y");
  });
  const onTapfvfike = activeVariantCallback(async (...args) => {
    setGestureState({ isPressed: false });
    setVariant("fdpGvkEzL");
  });
  const sharedStyleClassNames = [];
  const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
  return /* @__PURE__ */ _jsx(LayoutGroup, { id: layoutId ?? defaultLayoutId, children: /* @__PURE__ */ _jsx(Variants, { animate: variants, initial: false, children: /* @__PURE__ */ _jsx(Transition, { value: transition1, children: /* @__PURE__ */ _jsxs(motion.div, { ...restProps, ...gestureHandlers, className: cx(scopingClassNames, "framer-u2tgai", className, classNames), "data-framer-name": "Hamburger", "data-highlight": true, layoutDependency, layoutId: "fdpGvkEzL", onTap: onTapb36mnq, ref: refBinding, style: { ...style }, ...addPropertyOverrides({ JTJwLfN5y: { "data-framer-name": "Close", onTap: onTapfvfike } }, baseVariant, gestureVariant), children: [/* @__PURE__ */ _jsx(motion.div, { className: "framer-1w07jwh", layoutDependency, layoutId: "d4eFF6WAR", style: { backgroundColor: "var(--token-7a7ce709-7970-4e23-97d8-1ae0355d02f0, rgb(255, 255, 255))", borderBottomLeftRadius: radiusForCorner(d2WdKj7yR, 3), borderBottomRightRadius: radiusForCorner(d2WdKj7yR, 2), borderTopLeftRadius: radiusForCorner(d2WdKj7yR, 0), borderTopRightRadius: radiusForCorner(d2WdKj7yR, 1), rotate: 0 }, variants: { JTJwLfN5y: { backgroundColor: "rgb(255, 255, 255)", rotate: 45 } } }), /* @__PURE__ */ _jsx(motion.div, { className: "framer-1ucutao", layoutDependency, layoutId: "t_P44xJsW", style: { backgroundColor: "var(--token-7a7ce709-7970-4e23-97d8-1ae0355d02f0, rgb(255, 255, 255))", borderBottomLeftRadius: radiusForCorner(d2WdKj7yR, 3), borderBottomRightRadius: radiusForCorner(d2WdKj7yR, 2), borderTopLeftRadius: radiusForCorner(d2WdKj7yR, 0), borderTopRightRadius: radiusForCorner(d2WdKj7yR, 1), rotate: 0 }, variants: { JTJwLfN5y: { backgroundColor: "rgb(255, 255, 255)", rotate: -45 } } })] }) }) }) });
});
var css = ["@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }", ".framer-hEL9t.framer-mdcvs0, .framer-hEL9t .framer-mdcvs0 { display: block; }", ".framer-hEL9t.framer-u2tgai { cursor: pointer; height: 30px; overflow: hidden; position: relative; width: 30px; }", ".framer-hEL9t .framer-1w07jwh { flex: none; height: 2px; left: calc(50.00000000000002% - 20px / 2); overflow: visible; position: absolute; top: 10px; width: 20px; }", ".framer-hEL9t .framer-1ucutao { bottom: 10px; flex: none; height: 2px; left: calc(50.00000000000002% - 20px / 2); overflow: visible; position: absolute; width: 20px; }", ".framer-hEL9t.framer-v-1r3tigq.framer-u2tgai { aspect-ratio: 1 / 1; height: var(--framer-aspect-ratio-supported, 30px); }", ".framer-hEL9t.framer-v-1r3tigq .framer-1w07jwh { top: calc(50.00000000000002% - 2px / 2); }", ".framer-hEL9t.framer-v-1r3tigq .framer-1ucutao { bottom: unset; top: calc(50.00000000000002% - 2px / 2); }"];
var FramerrYRqmI1eP = withCSS(Component, css, "framer-hEL9t");
var stdin_default = FramerrYRqmI1eP;
FramerrYRqmI1eP.displayName = "Menu Icon";
FramerrYRqmI1eP.defaultProps = { height: 30, width: 30 };
addPropertyControls(FramerrYRqmI1eP, { variant: { options: ["fdpGvkEzL", "JTJwLfN5y"], optionTitles: ["Hamburger", "Close"], title: "Variant", type: ControlType.Enum }, d2WdKj7yR: { defaultValue: 0, displayStepper: true, max: 1, min: 0, title: "Radius", type: ControlType.Number } });
addFonts(FramerrYRqmI1eP, [{ explicitInter: true, fonts: [] }], { supportsExplicitInterCodegen: true });

// /:https://framerusercontent.com/modules/n2V0kiDN3aDsBQxngjTD/m7Z1VBcKiGBOdRLfx1Hw/GGTji9ljP.js
var MenuIconFonts = getFonts(stdin_default);
var enabledGestures = { eCAJUXREk: { hover: true }, lUqHrBod_: { hover: true } };
var cycleOrder2 = ["eCAJUXREk", "lUqHrBod_"];
var serializationHash2 = "framer-l8LZC";
var variantClassNames2 = { eCAJUXREk: "framer-v-12isa6r", lUqHrBod_: "framer-v-q9jm1r" };
function addPropertyOverrides2(overrides, ...variants) {
  const nextOverrides = {};
  variants?.forEach((variant) => variant && Object.assign(nextOverrides, overrides[variant]));
  return nextOverrides;
}
var transition12 = { damping: 60, delay: 0, mass: 1, stiffness: 500, type: "spring" };
var Transition2 = ({ value, children }) => {
  const config = React2.useContext(MotionConfigContext2);
  const transition = value ?? config.transition;
  const contextValue = React2.useMemo(() => ({ ...config, transition }), [JSON.stringify(transition)]);
  return /* @__PURE__ */ _jsx2(MotionConfigContext2.Provider, { value: contextValue, children });
};
var Variants2 = motion2.create(React2.Fragment);
var humanReadableVariantMap2 = { Default: "eCAJUXREk", Open: "lUqHrBod_" };
var getProps2 = ({ height, id, tap, width, ...props }) => {
  return { ...props, variant: humanReadableVariantMap2[props.variant] ?? props.variant ?? "eCAJUXREk", wFtRaEcWB: tap ?? props.wFtRaEcWB };
};
var createLayoutDependency2 = (props, variants) => {
  if (props.layoutDependency) return variants.join("-") + props.layoutDependency;
  return variants.join("-");
};
var Component2 = /* @__PURE__ */ React2.forwardRef(function(props, ref) {
  const fallbackRef = useRef2(null);
  const refBinding = ref ?? fallbackRef;
  const defaultLayoutId = React2.useId();
  const { activeLocale, setLocale } = useLocaleInfo2();
  const componentViewport = useComponentViewport2();
  const { style, className, layoutId, variant, wFtRaEcWB, ...restProps } = getProps2(props);
  const { baseVariant, classNames, clearLoadingGesture, gestureHandlers, gestureVariant, isLoading, setGestureState, setVariant, variants } = useVariantState2({ cycleOrder: cycleOrder2, defaultVariant: "eCAJUXREk", enabledGestures, ref: refBinding, variant, variantClassNames: variantClassNames2 });
  const layoutDependency = createLayoutDependency2(props, variants);
  const { activeVariantCallback, delay } = useActiveVariantCallback2(baseVariant);
  const onTap1ni2hzt = activeVariantCallback(async (...args) => {
    setGestureState({ isPressed: false });
    if (wFtRaEcWB) {
      const res = await wFtRaEcWB(...args);
      if (res === false) return false;
    }
  });
  const sharedStyleClassNames = [];
  const scopingClassNames = cx2(serializationHash2, ...sharedStyleClassNames);
  return /* @__PURE__ */ _jsx2(LayoutGroup2, { id: layoutId ?? defaultLayoutId, children: /* @__PURE__ */ _jsx2(Variants2, { animate: variants, initial: false, children: /* @__PURE__ */ _jsx2(Transition2, { value: transition12, children: /* @__PURE__ */ _jsxs2(motion2.div, { ...restProps, ...gestureHandlers, className: cx2(scopingClassNames, "framer-12isa6r", className, classNames), "data-framer-name": "Default", "data-highlight": true, layoutDependency, layoutId: "eCAJUXREk", onTap: onTap1ni2hzt, ref: refBinding, style: { ...style }, ...addPropertyOverrides2({ "eCAJUXREk-hover": { "data-framer-name": void 0 }, "lUqHrBod_-hover": { "data-framer-name": void 0 }, lUqHrBod_: { "data-framer-name": "Open" } }, baseVariant, gestureVariant), children: [/* @__PURE__ */ _jsx2(ComponentViewportProvider, { height: 30, y: (componentViewport?.y || 0) + (3 + ((componentViewport?.height || 36) - 6 - 30) / 2), children: /* @__PURE__ */ _jsx2(SmartComponentScopedContainer, { className: "framer-1hishfo-container", layoutDependency, layoutId: "ZmiKeuaae-container", nodeId: "ZmiKeuaae", rendersWithMotion: true, scopeId: "GGTji9ljP", children: /* @__PURE__ */ _jsx2(stdin_default, { d2WdKj7yR: 1, height: "100%", id: "ZmiKeuaae", layoutId: "ZmiKeuaae", variant: "fdpGvkEzL", width: "100%", ...addPropertyOverrides2({ lUqHrBod_: { variant: "JTJwLfN5y" } }, baseVariant, gestureVariant) }) }) }), /* @__PURE__ */ _jsx2(motion2.div, { className: "framer-1dwfo1m", "data-framer-name": "Background", layoutDependency, layoutId: "jUfxKO9zB", style: { backgroundColor: "var(--token-f5646347-2529-487d-8af1-d99f05c5451c, rgb(10, 10, 10))", borderBottomLeftRadius: 8, borderBottomRightRadius: 8, borderTopLeftRadius: 8, borderTopRightRadius: 8, opacity: 0 }, variants: { "eCAJUXREk-hover": { opacity: 1 }, "lUqHrBod_-hover": { opacity: 1 } } })] }) }) }) });
});
var css2 = ["@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }", ".framer-l8LZC.framer-du93ly, .framer-l8LZC .framer-du93ly { display: block; }", ".framer-l8LZC.framer-12isa6r { align-content: center; align-items: center; cursor: pointer; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 8px; height: min-content; justify-content: flex-start; overflow: hidden; padding: 3px; position: relative; width: min-content; }", ".framer-l8LZC .framer-1hishfo-container { flex: none; height: auto; position: relative; width: auto; z-index: 1; }", ".framer-l8LZC .framer-1dwfo1m { bottom: 2px; flex: none; left: 4px; overflow: hidden; position: absolute; right: 4px; top: 2px; will-change: var(--framer-will-change-override, transform); z-index: 0; }", "@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-l8LZC.framer-12isa6r { gap: 0px; } .framer-l8LZC.framer-12isa6r > * { margin: 0px; margin-left: calc(8px / 2); margin-right: calc(8px / 2); } .framer-l8LZC.framer-12isa6r > :first-child { margin-left: 0px; } .framer-l8LZC.framer-12isa6r > :last-child { margin-right: 0px; } }", ".framer-l8LZC.framer-v-12isa6r.hover .framer-1dwfo1m, .framer-l8LZC.framer-v-q9jm1r.hover .framer-1dwfo1m { bottom: 0px; left: 0px; right: 0px; top: 0px; }"];
var FramerGGTji9ljP = withCSS2(Component2, css2, "framer-l8LZC");
var stdin_default2 = FramerGGTji9ljP;
FramerGGTji9ljP.displayName = "Menu Button";
FramerGGTji9ljP.defaultProps = { height: 36, width: 36 };
addPropertyControls2(FramerGGTji9ljP, { variant: { options: ["eCAJUXREk", "lUqHrBod_"], optionTitles: ["Default", "Open"], title: "Variant", type: ControlType2.Enum }, wFtRaEcWB: { title: "Tap", type: ControlType2.EventHandler } });
addFonts2(FramerGGTji9ljP, [{ explicitInter: true, fonts: [] }, ...MenuIconFonts], { supportsExplicitInterCodegen: true });

export {
  stdin_default2 as stdin_default
};
