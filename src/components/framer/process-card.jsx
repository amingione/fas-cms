// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 891ff71faa342f0a "Polo (copy)", do not edit manually */
'use client';

/**
 * @typedef Locale
 * string
 */

/**
 * @typedef {{
 * children?: React.ReactNode
 * locale?: Locale
 * style?: React.CSSProperties
 * className?: string
 * id?: string
 * ref?: any
 * width?: any
 * height?: any
 * layoutId?: string
 * variant?: 'Process Card' | 'Process Card Mobile' // Variant
 * icon?: undefined // Icon
 * title?: string // Title
 * description?: string // Description
 * badgeText?: string // Badge Text
 * step?: string // step
}} Props

 */
import { className as className3, css as css3, fonts as fonts3 } from './chunks/chunk-NYPYBX2K.js';
import { className as className2, css as css2, fonts as fonts2 } from './chunks/chunk-OVUOJGQZ.js';
import { className, css, fonts } from './chunks/chunk-NO3BJMB6.js';
import { routes } from './chunks/chunk-23HYNGZD.js';

// virtual:process-card
import { Fragment as Fragment2 } from 'react';
import { ContextProviders } from 'unframer';
const FramerContextProviders = ContextProviders ?? (({ children }) => <>{children}</>);

// /:https://framerusercontent.com/modules/ula0YgCVDXPh0EnQ4d1L/kUrXDYUhofLJOrpnOvvJ/qhZc333Xx.js
import { jsx as _jsx2, jsxs as _jsxs } from 'react/jsx-runtime';
import {
  addFonts,
  addPropertyControls as addPropertyControls2,
  ControlType as ControlType2,
  cx as cx2,
  getFontsFromSharedStyle,
  Instance,
  RichText,
  useComponentViewport,
  useLocaleInfo,
  useVariantState,
  withCSS as withCSS2,
  withFX
} from 'unframer';
import { LayoutGroup, motion as motion2, MotionConfigContext } from 'unframer';
import * as React2 from 'react';
import { useRef } from 'react';

// /:https://framerusercontent.com/modules/6OfMMI77R5mpvsdFgMhv/m1Vly3Shefw5b4ni4xDK/N56HpYPBp.js
import { jsx as _jsx } from 'react/jsx-runtime';
import { addPropertyControls, ControlType, cx, motion, useSVGTemplate, withCSS } from 'unframer';
import * as React from 'react';
import { forwardRef as forwardRef2 } from 'react';
var Base = /* @__PURE__ */ forwardRef2(function (props, ref) {
  return (
    <svg {...props} ref={ref}>
      {props.children}
    </svg>
  );
});
var MotionSVG = motion.create(Base);
var SVG = /* @__PURE__ */ forwardRef2((props, ref) => {
  const { animated, layoutId, children, ...rest } = props;
  return animated ? (
    <MotionSVG {...rest} layoutId={layoutId} ref={ref}>
      {children}
    </MotionSVG>
  ) : (
    <svg {...rest} ref={ref}>
      {children}
    </svg>
  );
});
var svg =
  '<svg display="block" role="presentation" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M 0.174 3.406 C 0.025 3.585 -0.033 3.822 0.018 4.049 L 1.177 9.264 C 1.233 9.517 1.416 9.723 1.66 9.809 C 1.904 9.895 2.176 9.849 2.378 9.687 L 5.139 7.602 C 3.441 4.736 2.906 2.188 3.015 0 Z" fill-opacity="var(--1m6trwb, 0)" fill="var(--21h8s6, rgb(0, 0, 0))" height="9.851753518036176px" id="LpyAcAavm" transform="translate(3.75 10.398)" width="5.138616817656228px"/><path d="M 2.123 0 C 2.237 2.188 1.698 4.736 0 7.602 L 2.761 9.687 C 2.963 9.849 3.234 9.895 3.479 9.809 C 3.723 9.723 3.906 9.517 3.962 9.264 L 5.121 4.049 C 5.171 3.822 5.114 3.585 4.965 3.406 Z" fill-opacity="var(--1m6trwb, 0)" fill="var(--21h8s6, rgb(0, 0, 0))" height="9.851753518036148px" id="hh6tvULoK" transform="translate(15.112 10.398)" width="5.138616817656214px"/><path d="M 3 0 L 0 0" fill="transparent" height="1px" id="gEgK2innK" stroke-dasharray="" stroke-linecap="round" stroke-linejoin="round" stroke-width="var(--pgex8v, 1.5)" stroke="var(--21h8s6, rgb(0, 0, 0))" transform="translate(10.5 21)" width="3px"/><path d="M 0 1.125 C 0 0.504 0.504 0 1.125 0 C 1.746 0 2.25 0.504 2.25 1.125 C 2.25 1.746 1.746 2.25 1.125 2.25 C 0.504 2.25 0 1.746 0 1.125 Z" fill="var(--21h8s6, rgb(0, 0, 0))" height="2.25px" id="SNGmkjRW2" transform="translate(10.875 8.25)" width="2.25px"/><path d="M 2.139 16.5 C -3.232 7.437 2.988 1.55 4.79 0.158 C 5.061 -0.053 5.44 -0.053 5.711 0.158 C 7.512 1.55 13.733 7.437 8.362 16.5 Z" fill="transparent" height="16.500374673448476px" id="QSMF4pk4Q" stroke-dasharray="" stroke-linecap="round" stroke-linejoin="round" stroke-width="var(--pgex8v, 1.5)" stroke="var(--21h8s6, rgb(0, 0, 0))" transform="translate(6.75 1.5)" width="10.500538739026126px"/><path d="M 2.123 0 L 4.965 3.409 C 5.114 3.587 5.171 3.825 5.121 4.052 L 3.962 9.267 C 3.906 9.52 3.723 9.726 3.479 9.812 C 3.234 9.898 2.963 9.852 2.761 9.69 L 0 7.605" fill="transparent" height="9.854566018036166px" id="O1gf8wxq3" stroke-dasharray="" stroke-linecap="round" stroke-linejoin="round" stroke-width="var(--pgex8v, 1.5)" stroke="var(--21h8s6, rgb(0, 0, 0))" transform="translate(15.112 10.395)" width="5.138616817656214px"/><path d="M 3.015 0 L 0.174 3.409 C 0.025 3.587 -0.033 3.825 0.018 4.052 L 1.177 9.267 C 1.233 9.52 1.416 9.726 1.66 9.812 C 1.904 9.898 2.176 9.852 2.378 9.69 L 5.139 7.605" fill="transparent" height="9.854566018036166px" id="XAS__TOwP" stroke-dasharray="" stroke-linecap="round" stroke-linejoin="round" stroke-width="var(--pgex8v, 1.5)" stroke="var(--21h8s6, rgb(0, 0, 0))" transform="translate(3.75 10.395)" width="5.138616817656228px"/></svg>';
var getProps = ({ alpha, color, height, id, width, width1, ...props }) => {
  return {
    ...props,
    ezTt3ayMo: color ?? props.ezTt3ayMo ?? 'rgb(0, 0, 0)',
    lschgej4H: width1 ?? props.lschgej4H ?? 1.5,
    qxTvv_EBh: alpha ?? props.qxTvv_EBh
  };
};
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
  const {
    style,
    className: className4,
    layoutId,
    variant,
    ezTt3ayMo,
    lschgej4H,
    qxTvv_EBh,
    ...restProps
  } = getProps(props);
  const href = useSVGTemplate('3380339736', svg);
  return (
    <SVG
      {...restProps}
      className={cx('framer-PHxMV', className4)}
      layoutId={layoutId}
      ref={ref}
      role={'presentation'}
      style={{
        '--1m6trwb': qxTvv_EBh,
        '--21h8s6': ezTt3ayMo,
        '--pgex8v': lschgej4H,
        ...style
      }}
      viewBox={'0 0 24 24'}
    >
      <use href={href} />
    </SVG>
  );
});
var css4 = ['.framer-PHxMV { aspect-ratio: 1; display: block; width: 24px; }'];
var Icon = withCSS(Component, css4, 'framer-PHxMV');
Icon.displayName = 'Rocket';
var stdin_default = Icon;
addPropertyControls(Icon, {
  ezTt3ayMo: {
    defaultValue: 'rgb(0, 0, 0)',
    hidden: false,
    title: 'Color',
    type: ControlType.Color
  },
  lschgej4H: {
    defaultValue: 1.5,
    displayStepper: true,
    hidden: false,
    max: 6,
    min: 0,
    step: 0.5,
    title: 'Width',
    type: ControlType.Number
  },
  qxTvv_EBh: {
    defaultValue: 0,
    displayStepper: true,
    hidden: false,
    max: 1,
    min: 0,
    step: 0.1,
    title: 'Alpha',
    type: ControlType.Number
  }
});

// /:https://framerusercontent.com/modules/ula0YgCVDXPh0EnQ4d1L/kUrXDYUhofLJOrpnOvvJ/qhZc333Xx.js
var MotionDivWithFX = withFX(motion2.div);
var cycleOrder = ['wUiPXbC_d', 'mKXcklKu5'];
var serializationHash = 'framer-DYl6x';
var variantClassNames = {
  mKXcklKu5: 'framer-v-1itohqx',
  wUiPXbC_d: 'framer-v-br4389'
};
function addPropertyOverrides(overrides, ...variants) {
  const nextOverrides = {};
  variants?.forEach((variant) => variant && Object.assign(nextOverrides, overrides[variant]));
  return nextOverrides;
}
var animation = {
  opacity: 0,
  rotate: 0,
  rotateX: 0,
  rotateY: 0,
  scale: 1,
  skewX: 0,
  skewY: 0,
  x: -50,
  y: 0
};
var transition1 = {
  damping: 25,
  delay: 0.1,
  mass: 1,
  stiffness: 127,
  type: 'spring'
};
var animation1 = {
  opacity: 0,
  rotate: 0,
  rotateX: 0,
  rotateY: 0,
  scale: 1,
  skewX: 0,
  skewY: 0,
  transition: transition1,
  x: -50,
  y: 0
};
var transition2 = {
  bounce: 0.2,
  delay: 0,
  duration: 0.4,
  type: 'spring'
};
var Transition = ({ value, children }) => {
  const config = React2.useContext(MotionConfigContext);
  const transition = value ?? config.transition;
  const contextValue = React2.useMemo(
    () => ({
      ...config,
      transition
    }),
    [JSON.stringify(transition)]
  );
  return (
    <MotionConfigContext.Provider value={contextValue}>{children}</MotionConfigContext.Provider>
  );
};
var Variants = motion2.create(React2.Fragment);
var humanReadableVariantMap = {
  'Process Card Mobile': 'mKXcklKu5',
  'Process Card': 'wUiPXbC_d'
};
var getProps2 = ({ badgeText, description, height, icon, id, step, title, width, ...props }) => {
  return {
    ...props,
    cMLEvam8D: title ?? props.cMLEvam8D ?? 'Select a Plan.',
    fEimbXPQf: step ?? props.fEimbXPQf ?? 'step',
    kMYUm1Hus: icon ?? props.kMYUm1Hus ?? stdin_default,
    lq6j9JCSp:
      description ??
      props.lq6j9JCSp ??
      "Choose a plan that fits your needs, and we'll guide you through a seamless design and development process.",
    variant: humanReadableVariantMap[props.variant] ?? props.variant ?? 'wUiPXbC_d',
    xYKAp_GUD: badgeText ?? props.xYKAp_GUD ?? '1'
  };
};
var createLayoutDependency = (props, variants) => {
  if (props.layoutDependency) return variants.join('-') + props.layoutDependency;
  return variants.join('-');
};
var Component2 = /* @__PURE__ */ React2.forwardRef(function (props, ref) {
  const fallbackRef = useRef(null);
  const refBinding = ref ?? fallbackRef;
  const defaultLayoutId = React2.useId();
  const { activeLocale, setLocale } = useLocaleInfo();
  const componentViewport = useComponentViewport();
  const {
    style,
    className: className4,
    layoutId,
    variant,
    kMYUm1Hus,
    cMLEvam8D,
    lq6j9JCSp,
    xYKAp_GUD,
    fEimbXPQf,
    ...restProps
  } = getProps2(props);
  const {
    baseVariant,
    classNames,
    clearLoadingGesture,
    gestureHandlers,
    gestureVariant,
    isLoading,
    setGestureState,
    setVariant,
    variants
  } = useVariantState({
    cycleOrder,
    defaultVariant: 'wUiPXbC_d',
    ref: refBinding,
    variant,
    variantClassNames
  });
  const layoutDependency = createLayoutDependency(props, variants);
  const sharedStyleClassNames = [className2, className3, className];
  const scopingClassNames = cx2(serializationHash, ...sharedStyleClassNames);
  return (
    <LayoutGroup id={layoutId ?? defaultLayoutId}>
      <Variants animate={variants} initial={false}>
        <Transition value={transition2}>
          <MotionDivWithFX
            {...restProps}
            {...gestureHandlers}
            __framer__animate={{
              transition: transition1
            }}
            __framer__animateOnce={true}
            __framer__enter={animation}
            __framer__exit={animation1}
            __framer__styleAppearEffectEnabled={true}
            __framer__threshold={0}
            __perspectiveFX={false}
            __smartComponentFX={true}
            __targetOpacity={1}
            className={cx2(scopingClassNames, 'framer-br4389', className4, classNames)}
            data-framer-name={'Process Card'}
            layoutDependency={layoutDependency}
            layoutId={'wUiPXbC_d'}
            ref={refBinding}
            style={{
              backgroundColor: 'var(--token-cba3b9c8-9e49-437e-aca1-1e69db3088dc, rgb(17, 17, 17))',
              borderBottomLeftRadius: 16,
              borderBottomRightRadius: 16,
              borderTopLeftRadius: 16,
              borderTopRightRadius: 16,
              boxShadow:
                '16px 24px 20px 8px rgba(0, 0, 0, 0.4), inset 0px 2px 0px 0px rgba(184, 180, 180, 0.08)',
              ...style
            }}
            {...addPropertyOverrides(
              {
                mKXcklKu5: {
                  'data-framer-name': 'Process Card Mobile'
                }
              },
              baseVariant,
              gestureVariant
            )}
          >
            <motion2.div
              className={'framer-wt4un5'}
              data-framer-name={'Step Badge'}
              layoutDependency={layoutDependency}
              layoutId={'Nn3xLHv9W'}
              style={{
                backgroundColor:
                  'var(--token-f5646347-2529-487d-8af1-d99f05c5451c, rgb(10, 10, 10))',
                borderBottomLeftRadius: 100,
                borderBottomRightRadius: 100,
                borderTopLeftRadius: 100,
                borderTopRightRadius: 100,
                boxShadow: 'inset 0px 2px 0px 0px rgba(184, 180, 180, 0.14)'
              }}
            >
              <RichText
                __fromCanvasComponent={true}
                className={'framer-jai2ez'}
                fonts={['Inter']}
                layoutDependency={layoutDependency}
                layoutId={'cYB2VMOsu'}
                style={{
                  '--extracted-r6o4lv':
                    'var(--token-7a7ce709-7970-4e23-97d8-1ae0355d02f0, rgb(255, 255, 255))',
                  '--framer-link-text-color': 'rgb(0, 153, 255)',
                  '--framer-link-text-decoration': 'underline'
                }}
                text={xYKAp_GUD}
                verticalAlignment={'top'}
                withExternalLayout={true}
              >
                <React2.Fragment>
                  <motion2.p
                    className={'framer-styles-preset-1uqxdd2'}
                    data-styles-preset={'uCnC2_tAh'}
                    style={{
                      '--framer-text-color':
                        'var(--extracted-r6o4lv, var(--token-7a7ce709-7970-4e23-97d8-1ae0355d02f0, rgb(255, 255, 255)))'
                    }}
                  >
                    {'1'}
                  </motion2.p>
                </React2.Fragment>
              </RichText>
            </motion2.div>
            <Instance
              animated={true}
              className={'framer-ga3r4i'}
              Component={kMYUm1Hus}
              layoutDependency={layoutDependency}
              layoutId={'ZrqMMgqy1'}
              style={{
                '--1m6trwb': 0.2,
                '--21h8s6': 'var(--token-7a7ce709-7970-4e23-97d8-1ae0355d02f0, rgb(255, 255, 255))',
                '--pgex8v': 1.5
              }}
            />
            <motion2.div
              className={'framer-8lmccw'}
              data-framer-name={'Content'}
              layoutDependency={layoutDependency}
              layoutId={'q1Pgg7U9t'}
            >
              <RichText
                __fromCanvasComponent={true}
                className={'framer-4x2wn4'}
                fonts={['Inter']}
                layoutDependency={layoutDependency}
                layoutId={'s4KAQ1B3Z'}
                style={{
                  '--extracted-1lwpl3i':
                    'var(--token-7a7ce709-7970-4e23-97d8-1ae0355d02f0, rgb(255, 255, 255))',
                  '--framer-link-text-color': 'rgb(0, 153, 255)',
                  '--framer-link-text-decoration': 'underline'
                }}
                text={cMLEvam8D}
                verticalAlignment={'top'}
                withExternalLayout={true}
              >
                <React2.Fragment>
                  <motion2.h5
                    className={'framer-styles-preset-1ajziol'}
                    data-styles-preset={'WkrX6JBfV'}
                    style={{
                      '--framer-text-color':
                        'var(--extracted-1lwpl3i, var(--token-7a7ce709-7970-4e23-97d8-1ae0355d02f0, rgb(255, 255, 255)))'
                    }}
                  >
                    {'Select a Plan.'}
                  </motion2.h5>
                </React2.Fragment>
              </RichText>
              <RichText
                __fromCanvasComponent={true}
                className={'framer-1mmiwcv'}
                fonts={['Inter']}
                layoutDependency={layoutDependency}
                layoutId={'Hh6U_uFHL'}
                style={{
                  '--framer-link-text-color': 'rgb(0, 153, 255)',
                  '--framer-link-text-decoration': 'underline',
                  opacity: 0.7
                }}
                text={lq6j9JCSp}
                verticalAlignment={'top'}
                withExternalLayout={true}
              >
                <React2.Fragment>
                  <motion2.p
                    className={'framer-styles-preset-vp3sdo'}
                    data-styles-preset={'WQG2SsoyY'}
                  >
                    {
                      "Choose a plan that fits your needs, and we'll guide you through a seamless design and development process."
                    }
                  </motion2.p>
                </React2.Fragment>
              </RichText>
            </motion2.div>
            <motion2.div
              className={'framer-12mk5uz'}
              data-framer-name={'Line'}
              layoutDependency={layoutDependency}
              layoutId={'Fvvt74OUa'}
              style={{
                backgroundColor:
                  'var(--token-7a7ce709-7970-4e23-97d8-1ae0355d02f0, rgb(255, 255, 255))',
                opacity: 0.1
              }}
            />
            <motion2.div
              className={'framer-esxnbx'}
              data-border={true}
              data-framer-name={'Badge'}
              layoutDependency={layoutDependency}
              layoutId={'yikZLYrvG'}
              style={{
                '--border-bottom-width': '1px',
                '--border-color':
                  'var(--token-b2b2cec5-8316-4f9c-8fd9-5fdfc3c24032, rgba(255, 255, 255, 0.1))',
                '--border-left-width': '1px',
                '--border-right-width': '1px',
                '--border-style': 'solid',
                '--border-top-width': '1px',
                backgroundColor:
                  'var(--token-cba3b9c8-9e49-437e-aca1-1e69db3088dc, rgb(17, 17, 17))',
                borderBottomLeftRadius: 999,
                borderBottomRightRadius: 999,
                borderTopLeftRadius: 999,
                borderTopRightRadius: 999
              }}
            >
              <RichText
                __fromCanvasComponent={true}
                className={'framer-16e9co9'}
                fonts={['Inter']}
                layoutDependency={layoutDependency}
                layoutId={'qhwEJm_zj'}
                style={{
                  '--framer-link-text-color': 'rgb(0, 153, 255)',
                  '--framer-link-text-decoration': 'underline',
                  opacity: 0.7
                }}
                text={fEimbXPQf}
                verticalAlignment={'top'}
                withExternalLayout={true}
              >
                <React2.Fragment>
                  <motion2.p
                    className={'framer-styles-preset-vp3sdo'}
                    data-styles-preset={'WQG2SsoyY'}
                  >
                    {'step'}
                  </motion2.p>
                </React2.Fragment>
              </RichText>
            </motion2.div>
          </MotionDivWithFX>
        </Transition>
      </Variants>
    </LayoutGroup>
  );
});
var css5 = [
  '@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }',
  '.framer-DYl6x.framer-1n8a0cy, .framer-DYl6x .framer-1n8a0cy { display: block; }',
  '.framer-DYl6x.framer-br4389 { align-content: flex-start; align-items: flex-start; display: flex; flex-direction: column; flex-wrap: nowrap; gap: 24px; height: min-content; justify-content: center; overflow: hidden; padding: 30px; position: relative; width: 590px; will-change: var(--framer-will-change-override, transform); }',
  '.framer-DYl6x .framer-wt4un5 { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; overflow: hidden; padding: 3px 14px 3px 14px; position: absolute; right: 14px; top: 10px; width: min-content; will-change: var(--framer-will-change-override, transform); z-index: 1; }',
  '.framer-DYl6x .framer-jai2ez, .framer-DYl6x .framer-16e9co9 { flex: none; height: auto; position: relative; white-space: pre; width: auto; }',
  '.framer-DYl6x .framer-ga3r4i { flex: none; height: var(--framer-aspect-ratio-supported, 24px); position: relative; width: 30px; }',
  '.framer-DYl6x .framer-8lmccw { align-content: flex-start; align-items: flex-start; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: 85%; }',
  '.framer-DYl6x .framer-4x2wn4, .framer-DYl6x .framer-1mmiwcv { flex: none; height: auto; position: relative; white-space: pre-wrap; width: 100%; word-break: break-word; word-wrap: break-word; }',
  '.framer-DYl6x .framer-12mk5uz { flex: none; height: 1px; overflow: hidden; position: relative; width: 100%; }',
  '.framer-DYl6x .framer-esxnbx { align-content: center; align-items: center; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 0px; height: min-content; justify-content: center; overflow: hidden; padding: 4px 16px 4px 16px; position: relative; width: min-content; will-change: var(--framer-will-change-override, transform); }',
  '.framer-DYl6x.framer-v-1itohqx.framer-br4389 { padding: 20px; width: 350px; }',
  '.framer-DYl6x.framer-v-1itohqx .framer-8lmccw { width: 100%; }',
  ...css2,
  ...css3,
  ...css,
  '.framer-DYl6x[data-border="true"]::after, .framer-DYl6x [data-border="true"]::after { content: ""; border-width: var(--border-top-width, 0) var(--border-right-width, 0) var(--border-bottom-width, 0) var(--border-left-width, 0); border-color: var(--border-color, none); border-style: var(--border-style, none); width: 100%; height: 100%; position: absolute; box-sizing: border-box; left: 0; top: 0; border-radius: inherit; pointer-events: none; }'
];
var FramerqhZc333Xx = withCSS2(Component2, css5, 'framer-DYl6x');
var stdin_default2 = FramerqhZc333Xx;
FramerqhZc333Xx.displayName = 'Process Card';
FramerqhZc333Xx.defaultProps = {
  height: 290,
  width: 590
};
addPropertyControls2(FramerqhZc333Xx, {
  variant: {
    options: ['wUiPXbC_d', 'mKXcklKu5'],
    optionTitles: ['Process Card', 'Process Card Mobile'],
    title: 'Variant',
    type: ControlType2.Enum
  },
  kMYUm1Hus: {
    defaultValue: {
      identifier: 'module:6OfMMI77R5mpvsdFgMhv/m1Vly3Shefw5b4ni4xDK/N56HpYPBp.js:default',
      moduleId: '6OfMMI77R5mpvsdFgMhv'
    },
    setModuleId: 'omX0gWFPqDwhaiWwf6ab',
    title: 'Icon',
    type: ControlType2.VectorSetItem
  },
  cMLEvam8D: {
    defaultValue: 'Select a Plan.',
    displayTextArea: false,
    title: 'Title',
    type: ControlType2.String
  },
  lq6j9JCSp: {
    defaultValue:
      "Choose a plan that fits your needs, and we'll guide you through a seamless design and development process.",
    displayTextArea: false,
    title: 'Description',
    type: ControlType2.String
  },
  xYKAp_GUD: {
    defaultValue: '1',
    displayTextArea: false,
    placeholder: '1',
    title: 'Badge Text',
    type: ControlType2.String
  },
  fEimbXPQf: {
    defaultValue: 'step',
    displayTextArea: false,
    title: 'step',
    type: ControlType2.String
  }
});
addFonts(
  FramerqhZc333Xx,
  [
    {
      explicitInter: true,
      fonts: [
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange: 'U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F',
          url: 'https://framerusercontent.com/assets/5vvr9Vy74if2I6bQbJvbw7SY1pQ.woff2',
          weight: '400'
        },
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange: 'U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116',
          url: 'https://framerusercontent.com/assets/EOr0mi4hNtlgWNn9if640EZzXCo.woff2',
          weight: '400'
        },
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange: 'U+1F00-1FFF',
          url: 'https://framerusercontent.com/assets/Y9k9QrlZAqio88Klkmbd8VoMQc.woff2',
          weight: '400'
        },
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange: 'U+0370-03FF',
          url: 'https://framerusercontent.com/assets/OYrD2tBIBPvoJXiIHnLoOXnY9M.woff2',
          weight: '400'
        },
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange:
            'U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF',
          url: 'https://framerusercontent.com/assets/JeYwfuaPfZHQhEG8U5gtPDZ7WQ.woff2',
          weight: '400'
        },
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange:
            'U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD',
          url: 'https://framerusercontent.com/assets/vQyevYAyHtARFwPqUzQGpnDs.woff2',
          weight: '400'
        },
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange:
            'U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB',
          url: 'https://framerusercontent.com/assets/b6Y37FthZeALduNqHicBT6FutY.woff2',
          weight: '400'
        }
      ]
    },
    ...getFontsFromSharedStyle(fonts2),
    ...getFontsFromSharedStyle(fonts3),
    ...getFontsFromSharedStyle(fonts)
  ],
  {
    supportsExplicitInterCodegen: true
  }
);

// virtual:process-card
import { WithFramerBreakpoints } from 'unframer';
import { jsx } from 'react/jsx-runtime';
var locales = [];
var defaultResponsiveVariants = {
  base: 'mKXcklKu5',
  xl: 'wUiPXbC_d'
};
/** @type {function(Props): any} */
function ComponentWithRoot({ locale, ...rest }) {
  return (
    <FramerContextProviders
      routes={routes}
      framerSiteId={'891ff71faa342f0af7ef20f0583083bbec16fee0069f0ca5cfd3ff66fcf3cd1f'}
      locale={locale}
      locales={locales}
    >
      {jsx(stdin_default2, {
        ...rest
      })}
    </FramerContextProviders>
  );
}
/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */

/**
 * Renders ProcessCardFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({ locale = '', ...rest }) => {
  return (
    <FramerContextProviders
      routes={routes}
      framerSiteId={'891ff71faa342f0af7ef20f0583083bbec16fee0069f0ca5cfd3ff66fcf3cd1f'}
      locale={locale}
      locales={locales}
    >
      <WithFramerBreakpoints
        Component={stdin_default2}
        variants={defaultResponsiveVariants}
        {...rest}
      />
    </FramerContextProviders>
  );
};
Object.assign(ComponentWithRoot, stdin_default2);
var process_card_default = ComponentWithRoot;
export { process_card_default as default };
