// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 891ff71faa342f0a "Polo (copy)", do not edit manually */
'use client';

/**
 * @typedef Locale
 * string
 */

/**
 * @typedef {{
 * children?: React.ReactNode
 * locale?: Locale
 * style?: React.CSSProperties
 * className?: string
 * id?: string
 * ref?: any
 * width?: any
 * height?: any
 * layoutId?: string
 * variant?: 'Primary' | 'mobile' // Variant
 * role?: string // Role
 * company?: string // Company
 * year?: string // Year
}} Props

 */
import { className, css, fonts } from './chunks/chunk-EITFHPVU.js';
import { routes } from './chunks/chunk-23HYNGZD.js';

// virtual:experience
import { Fragment as Fragment2 } from 'react';
import { ContextProviders } from 'unframer';
const FramerContextProviders = ContextProviders ?? (({ children }) => <>{children}</>);

// /:https://framerusercontent.com/modules/8vLjKyEjSrp01pReIfeQ/KHyg9ZcMW0go7uawdetx/Tqum9rqkT.js
import { jsx as _jsx, jsxs as _jsxs } from 'react/jsx-runtime';
import {
  addFonts,
  addPropertyControls,
  ControlType,
  cx,
  getFontsFromSharedStyle,
  RichText,
  useComponentViewport,
  useLocaleInfo,
  useVariantState,
  withCSS
} from 'unframer';
import { LayoutGroup, motion, MotionConfigContext } from 'unframer';
import * as React from 'react';
var cycleOrder = ['dTp0vNpH7', 'yW57EPbgU'];
var serializationHash = 'framer-yrUMR';
var variantClassNames = {
  dTp0vNpH7: 'framer-v-90lkig',
  yW57EPbgU: 'framer-v-16cb9nf'
};
function addPropertyOverrides(overrides, ...variants) {
  const nextOverrides = {};
  variants?.forEach((variant) => variant && Object.assign(nextOverrides, overrides[variant]));
  return nextOverrides;
}
var transition1 = {
  damping: 60,
  delay: 0,
  mass: 1,
  stiffness: 500,
  type: 'spring'
};
var isSet = (value) => {
  if (Array.isArray(value)) return value.length > 0;
  return value !== void 0 && value !== null && value !== '';
};
var Transition = ({ value, children }) => {
  const config = React.useContext(MotionConfigContext);
  const transition = value ?? config.transition;
  const contextValue = React.useMemo(
    () => ({
      ...config,
      transition
    }),
    [JSON.stringify(transition)]
  );
  return (
    <MotionConfigContext.Provider value={contextValue}>{children}</MotionConfigContext.Provider>
  );
};
var Variants = motion.create(React.Fragment);
var humanReadableVariantMap = {
  mobile: 'yW57EPbgU',
  Primary: 'dTp0vNpH7'
};
var getProps = ({ company, height, id, role, width, year, ...props }) => {
  return {
    ...props,
    DCZKUwppc: company ?? props.DCZKUwppc ?? 'Framebase',
    MfQNi5TxV: year ?? props.MfQNi5TxV ?? '2023',
    ozXatut2e: role ?? props.ozXatut2e ?? 'Gen Team',
    variant: humanReadableVariantMap[props.variant] ?? props.variant ?? 'dTp0vNpH7'
  };
};
var createLayoutDependency = (props, variants) => {
  if (props.layoutDependency) return variants.join('-') + props.layoutDependency;
  return variants.join('-');
};
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
  const { activeLocale, setLocale } = useLocaleInfo();
  const {
    style,
    className: className2,
    layoutId,
    variant,
    ozXatut2e,
    DCZKUwppc,
    MfQNi5TxV,
    ...restProps
  } = getProps(props);
  const {
    baseVariant,
    classNames,
    clearLoadingGesture,
    gestureHandlers,
    gestureVariant,
    isLoading,
    setGestureState,
    setVariant,
    variants
  } = useVariantState({
    cycleOrder,
    defaultVariant: 'dTp0vNpH7',
    variant,
    variantClassNames
  });
  const layoutDependency = createLayoutDependency(props, variants);
  const sharedStyleClassNames = [className];
  const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
  const ref1 = React.useRef(null);
  const visible = isSet(ozXatut2e);
  const visible1 = isSet(DCZKUwppc);
  const visible2 = isSet(MfQNi5TxV);
  const defaultLayoutId = React.useId();
  const componentViewport = useComponentViewport();
  return (
    <LayoutGroup id={layoutId ?? defaultLayoutId}>
      <Variants animate={variants} initial={false}>
        <Transition value={transition1}>
          <motion.div
            {...restProps}
            {...gestureHandlers}
            className={cx(scopingClassNames, 'framer-90lkig', className2, classNames)}
            data-framer-name={'Primary'}
            layoutDependency={layoutDependency}
            layoutId={'dTp0vNpH7'}
            ref={ref ?? ref1}
            style={{
              backgroundColor: 'var(--token-91879fd0-dbdd-4c64-ae12-6b899e52b8b5, rgb(13, 13, 13))',
              borderBottomLeftRadius: 10,
              borderBottomRightRadius: 10,
              borderTopLeftRadius: 10,
              borderTopRightRadius: 10,
              boxShadow: '16px 24px 20px 8px rgba(0, 0, 0, 0.4)',
              ...style
            }}
            {...addPropertyOverrides(
              {
                yW57EPbgU: {
                  'data-framer-name': 'mobile'
                }
              },
              baseVariant,
              gestureVariant
            )}
          >
            {visible && (
              <RichText
                __fromCanvasComponent={true}
                className={'framer-13ivz9s'}
                fonts={['Inter']}
                layoutDependency={layoutDependency}
                layoutId={'M3omtGpCg'}
                style={{
                  '--framer-link-text-color': 'rgb(0, 153, 255)',
                  '--framer-link-text-decoration': 'underline'
                }}
                text={ozXatut2e}
                verticalAlignment={'top'}
                withExternalLayout={true}
              >
                <React.Fragment>
                  <motion.p
                    className={'framer-styles-preset-wu4ebp'}
                    data-styles-preset={'H1YXoF4HR'}
                  >
                    {'Gen Team'}
                  </motion.p>
                </React.Fragment>
              </RichText>
            )}
            {visible1 && (
              <RichText
                __fromCanvasComponent={true}
                className={'framer-1ijs8fp'}
                fonts={['Inter']}
                layoutDependency={layoutDependency}
                layoutId={'hzAJq9XwO'}
                style={{
                  '--framer-link-text-color': 'rgb(0, 153, 255)',
                  '--framer-link-text-decoration': 'underline'
                }}
                text={DCZKUwppc}
                verticalAlignment={'top'}
                withExternalLayout={true}
              >
                <React.Fragment>
                  <motion.p
                    className={'framer-styles-preset-wu4ebp'}
                    data-styles-preset={'H1YXoF4HR'}
                  >
                    {'Framebase'}
                  </motion.p>
                </React.Fragment>
              </RichText>
            )}
            {visible2 && (
              <RichText
                __fromCanvasComponent={true}
                className={'framer-1x9l1o4'}
                fonts={['Inter']}
                layoutDependency={layoutDependency}
                layoutId={'eHw1Q0QD1'}
                style={{
                  '--framer-link-text-color': 'rgb(0, 153, 255)',
                  '--framer-link-text-decoration': 'underline'
                }}
                text={MfQNi5TxV}
                verticalAlignment={'top'}
                withExternalLayout={true}
                {...addPropertyOverrides(
                  {
                    yW57EPbgU: {
                      children: (
                        <React.Fragment>
                          <motion.p
                            className={'framer-styles-preset-wu4ebp'}
                            data-styles-preset={'H1YXoF4HR'}
                            style={{
                              '--framer-text-alignment': 'start'
                            }}
                          >
                            {'2023'}
                          </motion.p>
                        </React.Fragment>
                      )
                    }
                  },
                  baseVariant,
                  gestureVariant
                )}
              >
                <React.Fragment>
                  <motion.p
                    className={'framer-styles-preset-wu4ebp'}
                    data-styles-preset={'H1YXoF4HR'}
                    style={{
                      '--framer-text-alignment': 'right'
                    }}
                  >
                    {'2023'}
                  </motion.p>
                </React.Fragment>
              </RichText>
            )}
          </motion.div>
        </Transition>
      </Variants>
    </LayoutGroup>
  );
});
var css2 = [
  '@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }',
  '.framer-yrUMR.framer-k0nozt, .framer-yrUMR .framer-k0nozt { display: block; }',
  '.framer-yrUMR.framer-90lkig { align-content: flex-start; align-items: flex-start; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 48px; height: min-content; justify-content: center; overflow: visible; padding: 16px; position: relative; width: 1200px; }',
  '.framer-yrUMR .framer-13ivz9s, .framer-yrUMR .framer-1ijs8fp, .framer-yrUMR .framer-1x9l1o4 { flex: 1 0 0px; height: auto; position: relative; white-space: pre-wrap; width: 1px; word-break: break-word; word-wrap: break-word; }',
  '@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-yrUMR.framer-90lkig { gap: 0px; } .framer-yrUMR.framer-90lkig > * { margin: 0px; margin-left: calc(48px / 2); margin-right: calc(48px / 2); } .framer-yrUMR.framer-90lkig > :first-child { margin-left: 0px; } .framer-yrUMR.framer-90lkig > :last-child { margin-right: 0px; } }',
  '.framer-yrUMR.framer-v-16cb9nf.framer-90lkig { flex-direction: column; gap: 8px; }',
  '.framer-yrUMR.framer-v-16cb9nf .framer-13ivz9s { flex: none; order: 0; width: 100%; }',
  '.framer-yrUMR.framer-v-16cb9nf .framer-1ijs8fp { flex: none; order: 1; width: 100%; }',
  '.framer-yrUMR.framer-v-16cb9nf .framer-1x9l1o4 { flex: none; order: 2; width: 100%; }',
  '@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-yrUMR.framer-v-16cb9nf.framer-90lkig { gap: 0px; } .framer-yrUMR.framer-v-16cb9nf.framer-90lkig > * { margin: 0px; margin-bottom: calc(8px / 2); margin-top: calc(8px / 2); } .framer-yrUMR.framer-v-16cb9nf.framer-90lkig > :first-child { margin-top: 0px; } .framer-yrUMR.framer-v-16cb9nf.framer-90lkig > :last-child { margin-bottom: 0px; } }',
  ...css
];
var FramerTqum9rqkT = withCSS(Component, css2, 'framer-yrUMR');
var stdin_default = FramerTqum9rqkT;
FramerTqum9rqkT.displayName = 'experience';
FramerTqum9rqkT.defaultProps = {
  height: 64,
  width: 1200
};
addPropertyControls(FramerTqum9rqkT, {
  variant: {
    options: ['dTp0vNpH7', 'yW57EPbgU'],
    optionTitles: ['Primary', 'mobile'],
    title: 'Variant',
    type: ControlType.Enum
  },
  ozXatut2e: {
    defaultValue: 'Gen Team',
    displayTextArea: false,
    title: 'Role',
    type: ControlType.String
  },
  DCZKUwppc: {
    defaultValue: 'Framebase',
    displayTextArea: false,
    title: 'Company',
    type: ControlType.String
  },
  MfQNi5TxV: {
    defaultValue: '2023',
    displayTextArea: false,
    title: 'Year',
    type: ControlType.String
  }
});
addFonts(
  FramerTqum9rqkT,
  [
    {
      explicitInter: true,
      fonts: [
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange: 'U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F',
          url: 'https://framerusercontent.com/assets/5vvr9Vy74if2I6bQbJvbw7SY1pQ.woff2',
          weight: '400'
        },
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange: 'U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116',
          url: 'https://framerusercontent.com/assets/EOr0mi4hNtlgWNn9if640EZzXCo.woff2',
          weight: '400'
        },
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange: 'U+1F00-1FFF',
          url: 'https://framerusercontent.com/assets/Y9k9QrlZAqio88Klkmbd8VoMQc.woff2',
          weight: '400'
        },
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange: 'U+0370-03FF',
          url: 'https://framerusercontent.com/assets/OYrD2tBIBPvoJXiIHnLoOXnY9M.woff2',
          weight: '400'
        },
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange:
            'U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF',
          url: 'https://framerusercontent.com/assets/JeYwfuaPfZHQhEG8U5gtPDZ7WQ.woff2',
          weight: '400'
        },
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange:
            'U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD',
          url: 'https://framerusercontent.com/assets/vQyevYAyHtARFwPqUzQGpnDs.woff2',
          weight: '400'
        },
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange:
            'U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB',
          url: 'https://framerusercontent.com/assets/b6Y37FthZeALduNqHicBT6FutY.woff2',
          weight: '400'
        }
      ]
    },
    ...getFontsFromSharedStyle(fonts)
  ],
  {
    supportsExplicitInterCodegen: true
  }
);

// virtual:experience
import { WithFramerBreakpoints } from 'unframer';
import { jsx } from 'react/jsx-runtime';
var locales = [];
var defaultResponsiveVariants = {
  base: 'yW57EPbgU',
  xl: 'dTp0vNpH7'
};
/** @type {function(Props): any} */
function ComponentWithRoot({ locale, ...rest }) {
  return (
    <FramerContextProviders
      routes={routes}
      framerSiteId={'891ff71faa342f0af7ef20f0583083bbec16fee0069f0ca5cfd3ff66fcf3cd1f'}
      locale={locale}
      locales={locales}
    >
      {jsx(stdin_default, {
        ...rest
      })}
    </FramerContextProviders>
  );
}
/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */

/**
 * Renders ExperienceFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({ locale = '', ...rest }) => {
  return (
    <FramerContextProviders
      routes={routes}
      framerSiteId={'891ff71faa342f0af7ef20f0583083bbec16fee0069f0ca5cfd3ff66fcf3cd1f'}
      locale={locale}
      locales={locales}
    >
      <WithFramerBreakpoints
        Component={stdin_default}
        variants={defaultResponsiveVariants}
        {...rest}
      />
    </FramerContextProviders>
  );
};
Object.assign(ComponentWithRoot, stdin_default);
var experience_default = ComponentWithRoot;
export { experience_default as default };
