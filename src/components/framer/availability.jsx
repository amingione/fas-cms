// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 891ff71faa342f0a "Polo (copy)", do not edit manually */
'use client';

/**
 * @typedef Locale
 * string
 */

/**
 * @typedef {{
 * children?: React.ReactNode
 * locale?: Locale
 * style?: React.CSSProperties
 * className?: string
 * id?: string
 * ref?: any
 * width?: any
 * height?: any
 * layoutId?: string
 * variant?: 'Available' | 'Available-2' | 'Unavailable' // Variant
 * greenText?: string // Green text
 * redText?: string // Red text
}} Props

 */
import { className, css, fonts } from './chunks/chunk-OAOMI3YP.js';
import { routes } from './chunks/chunk-23HYNGZD.js';

// virtual:availability
import { Fragment as Fragment2 } from 'react';
import { ContextProviders } from 'unframer';
const FramerContextProviders = ContextProviders ?? (({ children }) => <>{children}</>);

// /:https://framerusercontent.com/modules/yzLdQv48PG0PLuIOU1P8/dGZuIZa6qHmOGlzuFQ3N/i4bgRBcDo.js
import { jsx as _jsx, jsxs as _jsxs } from 'react/jsx-runtime';
import {
  addFonts,
  addPropertyControls,
  ControlType,
  cx,
  getFontsFromSharedStyle,
  RichText,
  useActiveVariantCallback,
  useComponentViewport,
  useLocaleInfo,
  useOnVariantChange,
  useVariantState,
  withCSS
} from 'unframer';
import { LayoutGroup, motion, MotionConfigContext } from 'unframer';
import * as React from 'react';
var cycleOrder = ['OIMsOnQae', 'R0loCo65z', 'mHmHyzTs_'];
var serializationHash = 'framer-visRt';
var variantClassNames = {
  mHmHyzTs_: 'framer-v-1i8k8mo',
  OIMsOnQae: 'framer-v-14jn0hj',
  R0loCo65z: 'framer-v-1ege20u'
};
function addPropertyOverrides(overrides, ...variants) {
  const nextOverrides = {};
  variants?.forEach((variant) => variant && Object.assign(nextOverrides, overrides[variant]));
  return nextOverrides;
}
var transition1 = {
  duration: 0,
  type: 'tween'
};
var transition2 = {
  delay: 0,
  duration: 0.7,
  ease: [0.12, 0.23, 0.5, 1],
  type: 'tween'
};
var transformTemplate1 = (_, t) => `translate(-50%, -50%) ${t}`;
var Transition = ({ value, children }) => {
  const config = React.useContext(MotionConfigContext);
  const transition = value ?? config.transition;
  const contextValue = React.useMemo(
    () => ({
      ...config,
      transition
    }),
    [JSON.stringify(transition)]
  );
  return (
    <MotionConfigContext.Provider value={contextValue}>{children}</MotionConfigContext.Provider>
  );
};
var Variants = motion.create(React.Fragment);
var humanReadableVariantMap = {
  'Available-2': 'R0loCo65z',
  Available: 'OIMsOnQae',
  Unavailable: 'mHmHyzTs_'
};
var getProps = ({ greenText, height, id, redText, width, ...props }) => {
  return {
    ...props,
    jn909WTNI: greenText ?? props.jn909WTNI ?? 'AVAILABLE',
    tCgMNdSJ8: redText ?? props.tCgMNdSJ8 ?? 'UNAVAILABLE',
    variant: humanReadableVariantMap[props.variant] ?? props.variant ?? 'OIMsOnQae'
  };
};
var createLayoutDependency = (props, variants) => {
  if (props.layoutDependency) return variants.join('-') + props.layoutDependency;
  return variants.join('-');
};
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
  const { activeLocale, setLocale } = useLocaleInfo();
  const {
    style,
    className: className2,
    layoutId,
    variant,
    jn909WTNI,
    tCgMNdSJ8,
    ...restProps
  } = getProps(props);
  const {
    baseVariant,
    classNames,
    clearLoadingGesture,
    gestureHandlers,
    gestureVariant,
    isLoading,
    setGestureState,
    setVariant,
    variants
  } = useVariantState({
    cycleOrder,
    defaultVariant: 'OIMsOnQae',
    variant,
    variantClassNames
  });
  const layoutDependency = createLayoutDependency(props, variants);
  const { activeVariantCallback, delay } = useActiveVariantCallback(baseVariant);
  const onAppear1amdimr = activeVariantCallback(async (...args) => {
    await delay(() => setVariant('R0loCo65z'), 1e3);
  });
  const onAppear1dhxbq = activeVariantCallback(async (...args) => {
    await delay(() => setVariant('OIMsOnQae'), 1e3);
  });
  useOnVariantChange(baseVariant, {
    default: onAppear1amdimr,
    mHmHyzTs_: void 0,
    R0loCo65z: onAppear1dhxbq
  });
  const sharedStyleClassNames = [className];
  const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
  const ref1 = React.useRef(null);
  const defaultLayoutId = React.useId();
  const componentViewport = useComponentViewport();
  return (
    <LayoutGroup id={layoutId ?? defaultLayoutId}>
      <Variants animate={variants} initial={false}>
        <Transition
          value={transition1}
          {...addPropertyOverrides(
            {
              R0loCo65z: {
                value: transition2
              }
            },
            baseVariant,
            gestureVariant
          )}
        >
          <motion.div
            {...restProps}
            {...gestureHandlers}
            className={cx(scopingClassNames, 'framer-14jn0hj', className2, classNames)}
            data-framer-name={'Available'}
            data-highlight={true}
            layoutDependency={layoutDependency}
            layoutId={'OIMsOnQae'}
            ref={ref ?? ref1}
            style={{
              backdropFilter: 'blur(8px)',
              borderBottomLeftRadius: 8,
              borderBottomRightRadius: 8,
              borderTopLeftRadius: 8,
              borderTopRightRadius: 8,
              WebkitBackdropFilter: 'blur(8px)',
              ...style
            }}
            {...addPropertyOverrides(
              {
                mHmHyzTs_: {
                  'data-framer-name': 'Unavailable',
                  'data-highlight': void 0
                },
                R0loCo65z: {
                  'data-framer-name': 'Available-2'
                }
              },
              baseVariant,
              gestureVariant
            )}
          >
            <motion.div
              className={'framer-1d36ewf'}
              data-framer-name={'Pulser'}
              layoutDependency={layoutDependency}
              layoutId={'BEjDtRx4T'}
            >
              <motion.div
                className={'framer-11qsx53'}
                data-framer-name={'Pulsing'}
                layoutDependency={layoutDependency}
                layoutId={'HGY6h7b6w'}
                style={{
                  backgroundColor: 'rgb(49, 238, 51)',
                  borderBottomLeftRadius: 10,
                  borderBottomRightRadius: 10,
                  borderTopLeftRadius: 10,
                  borderTopRightRadius: 10,
                  opacity: 0.5
                }}
                variants={{
                  mHmHyzTs_: {
                    backgroundColor: 'rgb(237, 49, 49)'
                  },
                  R0loCo65z: {
                    borderBottomLeftRadius: 100,
                    borderBottomRightRadius: 100,
                    borderTopLeftRadius: 100,
                    borderTopRightRadius: 100,
                    opacity: 0
                  }
                }}
                {...addPropertyOverrides(
                  {
                    R0loCo65z: {
                      transformTemplate: transformTemplate1
                    }
                  },
                  baseVariant,
                  gestureVariant
                )}
              />
              <motion.div
                className={'framer-1h5apqm'}
                data-framer-name={'Solid'}
                layoutDependency={layoutDependency}
                layoutId={'td8LgqWhq'}
                style={{
                  backgroundColor: 'rgb(49, 238, 51)',
                  borderBottomLeftRadius: 10,
                  borderBottomRightRadius: 10,
                  borderTopLeftRadius: 10,
                  borderTopRightRadius: 10,
                  boxShadow: '0px 0px 20px 0px rgba(49, 238, 51, 0.5)'
                }}
                variants={{
                  mHmHyzTs_: {
                    backgroundColor: 'rgb(237, 49, 49)',
                    boxShadow: '0px 0px 20px 0px hsla(0, 84%, 56%, 0.5)'
                  },
                  R0loCo65z: {
                    borderBottomLeftRadius: 100,
                    borderBottomRightRadius: 100,
                    borderTopLeftRadius: 100,
                    borderTopRightRadius: 100
                  }
                }}
              />
            </motion.div>
            <RichText
              __fromCanvasComponent={true}
              className={'framer-1qku3ya'}
              data-framer-name={'Text'}
              fonts={['Inter']}
              layoutDependency={layoutDependency}
              layoutId={'lkMKYuIat'}
              style={{
                '--extracted-r6o4lv':
                  'var(--token-7a7ce709-7970-4e23-97d8-1ae0355d02f0, rgb(255, 255, 255))',
                '--framer-link-text-color': 'rgb(0, 153, 255)',
                '--framer-link-text-decoration': 'underline',
                '--framer-paragraph-spacing': '0px'
              }}
              text={jn909WTNI}
              verticalAlignment={'top'}
              withExternalLayout={true}
              {...addPropertyOverrides(
                {
                  mHmHyzTs_: {
                    text: tCgMNdSJ8
                  }
                },
                baseVariant,
                gestureVariant
              )}
            >
              <React.Fragment>
                <motion.p
                  className={'framer-styles-preset-alq253'}
                  data-styles-preset={'zWXM5V5_k'}
                  style={{
                    '--framer-text-color':
                      'var(--extracted-r6o4lv, var(--token-7a7ce709-7970-4e23-97d8-1ae0355d02f0, rgb(255, 255, 255)))'
                  }}
                >
                  {'AVAILABLE'}
                </motion.p>
              </React.Fragment>
            </RichText>
          </motion.div>
        </Transition>
      </Variants>
    </LayoutGroup>
  );
});
var css2 = [
  '@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }',
  '.framer-visRt.framer-1k421dy, .framer-visRt .framer-1k421dy { display: block; }',
  '.framer-visRt.framer-14jn0hj { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; overflow: visible; padding: 6px 12px 6px 12px; position: relative; width: min-content; }',
  '.framer-visRt .framer-1d36ewf { flex: none; height: 12px; overflow: visible; position: relative; width: 12px; }',
  '.framer-visRt .framer-11qsx53 { flex: none; height: 7px; left: calc(50.00000000000002% - 7px / 2); overflow: hidden; position: absolute; top: calc(50.00000000000002% - 7px / 2); width: 7px; will-change: var(--framer-will-change-override, transform); }',
  '.framer-visRt .framer-1h5apqm { bottom: 3px; flex: none; left: 3px; overflow: hidden; position: absolute; right: 3px; top: 3px; will-change: var(--framer-will-change-override, transform); }',
  '.framer-visRt .framer-1qku3ya { -webkit-user-select: none; flex: none; height: auto; position: relative; user-select: none; white-space: pre; width: auto; }',
  '@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-visRt.framer-14jn0hj { gap: 0px; } .framer-visRt.framer-14jn0hj > * { margin: 0px; margin-left: calc(10px / 2); margin-right: calc(10px / 2); } .framer-visRt.framer-14jn0hj > :first-child { margin-left: 0px; } .framer-visRt.framer-14jn0hj > :last-child { margin-right: 0px; } }',
  '.framer-visRt.framer-v-1ege20u .framer-11qsx53 { aspect-ratio: 1 / 1; height: var(--framer-aspect-ratio-supported, 48px); left: 50%; top: 50%; width: 48px; }',
  ...css
];
var Frameri4bgRBcDo = withCSS(Component, css2, 'framer-visRt');
var stdin_default = Frameri4bgRBcDo;
Frameri4bgRBcDo.displayName = 'Availability';
Frameri4bgRBcDo.defaultProps = {
  height: 34,
  width: 110
};
addPropertyControls(Frameri4bgRBcDo, {
  variant: {
    options: ['OIMsOnQae', 'R0loCo65z', 'mHmHyzTs_'],
    optionTitles: ['Available', 'Available-2', 'Unavailable'],
    title: 'Variant',
    type: ControlType.Enum
  },
  jn909WTNI: {
    defaultValue: 'AVAILABLE',
    displayTextArea: false,
    title: 'Green text',
    type: ControlType.String
  },
  tCgMNdSJ8: {
    defaultValue: 'UNAVAILABLE',
    displayTextArea: false,
    title: 'Red text',
    type: ControlType.String
  }
});
addFonts(
  Frameri4bgRBcDo,
  [
    {
      explicitInter: true,
      fonts: [
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange: 'U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F',
          url: 'https://framerusercontent.com/assets/5vvr9Vy74if2I6bQbJvbw7SY1pQ.woff2',
          weight: '400'
        },
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange: 'U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116',
          url: 'https://framerusercontent.com/assets/EOr0mi4hNtlgWNn9if640EZzXCo.woff2',
          weight: '400'
        },
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange: 'U+1F00-1FFF',
          url: 'https://framerusercontent.com/assets/Y9k9QrlZAqio88Klkmbd8VoMQc.woff2',
          weight: '400'
        },
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange: 'U+0370-03FF',
          url: 'https://framerusercontent.com/assets/OYrD2tBIBPvoJXiIHnLoOXnY9M.woff2',
          weight: '400'
        },
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange:
            'U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF',
          url: 'https://framerusercontent.com/assets/JeYwfuaPfZHQhEG8U5gtPDZ7WQ.woff2',
          weight: '400'
        },
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange:
            'U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD',
          url: 'https://framerusercontent.com/assets/vQyevYAyHtARFwPqUzQGpnDs.woff2',
          weight: '400'
        },
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange:
            'U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB',
          url: 'https://framerusercontent.com/assets/b6Y37FthZeALduNqHicBT6FutY.woff2',
          weight: '400'
        }
      ]
    },
    ...getFontsFromSharedStyle(fonts)
  ],
  {
    supportsExplicitInterCodegen: true
  }
);

// virtual:availability
import { WithFramerBreakpoints } from 'unframer';
import { jsx } from 'react/jsx-runtime';
var locales = [];
var defaultResponsiveVariants = {
  base: 'OIMsOnQae'
};
/** @type {function(Props): any} */
function ComponentWithRoot({ locale, ...rest }) {
  return (
    <FramerContextProviders
      routes={routes}
      framerSiteId={'891ff71faa342f0af7ef20f0583083bbec16fee0069f0ca5cfd3ff66fcf3cd1f'}
      locale={locale}
      locales={locales}
    >
      {jsx(stdin_default, {
        ...rest
      })}
    </FramerContextProviders>
  );
}
/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */

/**
 * Renders AvailabilityFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({ locale = '', ...rest }) => {
  return (
    <FramerContextProviders
      routes={routes}
      framerSiteId={'891ff71faa342f0af7ef20f0583083bbec16fee0069f0ca5cfd3ff66fcf3cd1f'}
      locale={locale}
      locales={locales}
    >
      <WithFramerBreakpoints
        Component={stdin_default}
        variants={defaultResponsiveVariants}
        {...rest}
      />
    </FramerContextProviders>
  );
};
Object.assign(ComponentWithRoot, stdin_default);
var availability_default = ComponentWithRoot;
export { availability_default as default };
